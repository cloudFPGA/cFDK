// *****************************************************************************
// *
// *                             cloudFPGA
// *            All rights reserved -- Property of IBM
// *
// *----------------------------------------------------------------------------
// *
// * Title : Toplevel of the echo application in store-and-forward mode.
// *
// * File    : RoleEchoStoreAndForward.v
// *
// * Created : June 2018
// * Authors : Francois Abel <fab@zurich.ibm.com>
// *
// * Devices : xcku060-ffva1156-2-i
// * Tools   : Vivado v2017.4 (64-bit)
// * Depends : None
// *
// * Description : This version of the role implements an echo application 
// *    between the Rx and Tx ports of a UDP connection and between the the Rx
// *    and Tx ports of a TCP connection. The role is said to be operating in
// *    "store-and-forward" mode because every received packet is first written
// *    into the DDR4 memory before being read and sent back on the network.          
// * 
// * Infos & Conventions:
// *    <pi> stands for "PortIn". 
// *    <po> stands for "PortOut".
// *    <pi><SRC>_<Itf1>_<Itf1.1>_<Itf1.1.1>_tdata stands for the "data" signals
// *         of an Axi4-Stream generated by the source (i.e. master) "SRC", out
// *         of its interface "Itf1" and its sub-interfaces "Itf1.1" and 
// *         "Itf1.1.1".
// *    <si> stands for "StreamIn". 
// *    <so> stands for "StreamOut".
// *    <si><SRC>_<Itf1>_<Itf1.1>_<Itf1.1.1>_tdata stands for the "data" signals
// *         of an Axi4-Stream generated by the source (i.e. master) "SRC", out
// *         of its interface "Itf1" and its sub-interfaces "Itf1.1" and 
// *         "Itf1.1.1".
// *
// *****************************************************************************


`timescale 1 ns / 1 ps

// *****************************************************************************
// **  MODULE - ECHO STORE-AND-FORWARD ROLE FOR FMKU60
// *****************************************************************************

module Role_x1Udp_x1Tcp_x2Mp
(

    //------------------------------------------------------
    //-- SHELL / Global Input Clock and Reset Interface
    //------------------------------------------------------
    input wire          piSHL_156_25Clk,
    input wire          piSHL_156_25Rst,

    //--------------------------------------------------------
    //-- SHELL / Role / Nts0 / Udp Interface
    //--------------------------------------------------------
    //---- Input AXI-Write Stream Interface --------
    input wire [ 63:0]  piSHL_Rol_Nts0_Udp_Axis_tdata,
    input wire [ 7:0]   piSHL_Rol_Nts0_Udp_Axis_tkeep,
    input wire          piSHL_Rol_Nts0_Udp_Axis_tlast,
    input wire          piSHL_Rol_Nts0_Udp_Axis_tvalid,
    output wire         poROL_Shl_Nts0_Udp_Axis_tready,
    //---- Output AXI-Write Stream Interface ---------
    input wire          piSHL_Rol_Nts0_Udp_Axis_tready,
    output wire [ 63:0] poROL_Shl_Nts0_Udp_Axis_tdata,
    output wire [ 7:0]  poROL_Shl_Nts0_Udp_Axis_tkeep,
    output wire         poROL_Shl_Nts0_Udp_Axis_tlast,
    output wire         poROL_Shl_Nts0_Udp_Axis_tvalid,
    
    //--------------------------------------------------------
    //-- SHELL / Role / Nts0 / Tcp Interface
    //--------------------------------------------------------
    //---- Input AXI-Write Stream Interface ----------
    input wire [ 63:0]  piSHL_Rol_Nts0_Tcp_Axis_tdata,
    input wire [ 7:0]   piSHL_Rol_Nts0_Tcp_Axis_tkeep,
    input wire          piSHL_Rol_Nts0_Tcp_Axis_tlast,
    input wire          piSHL_Rol_Nts0_Tcp_Axis_tvalid,
    output wire         poROL_Shl_Nts0_Tcp_Axis_tready,
    //---- Output AXI-Write Stream Interface ---------
    input wire          piSHL_Rol_Nts0_Tcp_Axis_tready,
    output wire [ 63:0] poROL_Shl_Nts0_Tcp_Axis_tdata,
    output wire [ 7:0]  poROL_Shl_Nts0_Tcp_Axis_tkeep,
    output wire         poROL_Shl_Nts0_Tcp_Axis_tlast,
    output wire         poROL_Shl_Nts0_Tcp_Axis_tvalid,
    
    //-------------------------------------------------------
    //-- ROLE EMIF Registers
    //-------------------------------------------------------
    output wire         poROL_SHL_EMIF_2B_Reg,
    input wire          piSHL_ROL_EMIF_2B_Reg,
    
    //-----------------------------------------------
    //-- SHELL / Role / Mem / Mp0 Interface
    //------------------------------------------------
    //---- Memory Port #0 / S2MM-AXIS ------------------   
    //------ Stream Read Command -----------------
    input wire          piSHL_Rol_Mem_Mp0_Axis_RdCmd_tready,
    output wire [ 71:0] poROL_Shl_Mem_Mp0_Axis_RdCmd_tdata,
    output wire         poROL_Shl_Mem_Mp0_Axis_RdCmd_tvalid,
    //------ Stream Read Status ------------------
    input wire  [  7:0] piSHL_Rol_Mem_Mp0_Axis_RdSts_tdata,
    input wire          piSHL_Rol_Mem_Mp0_Axis_RdSts_tvalid,
    output wire         poROL_Shl_Mem_Mp0_Axis_RdSts_tready,
    //------ Stream Data Input Channel -----------
    input wire  [511:0] piSHL_Rol_Mem_Mp0_Axis_Read_tdata,
    input wire  [ 63:0] piSHL_Rol_Mem_Mp0_Axis_Read_tkeep,
    input wire          piSHL_Rol_Mem_Mp0_Axis_Read_tlast,
    input wire          piSHL_Rol_Mem_Mp0_Axis_Read_tvalid,
    output wire         poROL_Shl_Mem_Mp0_Axis_Read_tready,
    //------ Stream Write Command ----------------
    input wire          piSHL_Rol_Mem_Mp0_Axis_WrCmd_tready,
    output wire [ 71:0] poROL_Shl_Mem_Mp0_Axis_WrCmd_tdata,
    output wire         poROL_Shl_Mem_Mp0_Axis_WrCmd_tvalid,
    //------ Stream Write Status -----------------
    input wire  [  7:0] piSHL_Rol_Mem_Mp0_Axis_WrSts_tdata,
    input wire          piSHL_Rol_Mem_Mp0_Axis_WrSts_tvalid,
    output wire         poROL_Shl_Mem_Mp0_Axis_WrSts_tready,
    //------ Stream Data Output Channel ----------
    input wire          piSHL_Rol_Mem_Mp0_Axis_Write_tready,
    output wire [511:0] poROL_Shl_Mem_Mp0_Axis_Write_tdata,
    output wire [ 63:0] poROL_Shl_Mem_Mp0_Axis_Write_tkeep,
    output wire         poROL_Shl_Mem_Mp0_Axis_Write_tlast,
    output wire         poROL_Shl_Mem_Mp0_Axis_Write_tvalid,
       
    //------------------------------------------------
    //-- SHELL / Role / Mem / Mp1 Interface
    //------------------------------------------------
    //---- Memory Port #1 / S2MM-AXIS ------------------   
    //------ Stream Read Command -----------------
    input wire          piSHL_Rol_Mem_Mp1_Axis_RdCmd_tready,
    output wire [ 71:0] poROL_Shl_Mem_Mp1_Axis_RdCmd_tdata,
    output wire         poROL_Shl_Mem_Mp1_Axis_RdCmd_tvalid,
    //------ Stream Read Status ------------------
    input wire  [  7:0] piSHL_Rol_Mem_Mp1_Axis_RdSts_tdata,
    input wire          piSHL_Rol_Mem_Mp1_Axis_RdSts_tvalid,
    output wire         poROL_Shl_Mem_Mp1_Axis_RdSts_tready,
    //------ Stream Data Input Channel -----------
    input wire  [511:0] piSHL_Rol_Mem_Mp1_Axis_Read_tdata,
    input wire  [ 63:0] piSHL_Rol_Mem_Mp1_Axis_Read_tkeep,
    input wire          piSHL_Rol_Mem_Mp1_Axis_Read_tlast,
    input wire          piSHL_Rol_Mem_Mp1_Axis_Read_tvalid,
    output wire         poROL_Shl_Mem_Mp1_Axis_Read_tready,
    //------ Stream Write Command ----------------
    input wire          piSHL_Rol_Mem_Mp1_Axis_WrCmd_tready,
    output wire [ 71:0] poROL_Shl_Mem_Mp1_Axis_WrCmd_tdata,
    output wire         poROL_Shl_Mem_Mp1_Axis_WrCmd_tvalid,
    //------ Stream Write Status -----------------
    input wire          piSHL_Rol_Mem_Mp1_Axis_WrSts_tvalid,
    input wire  [  7:0] piSHL_Rol_Mem_Mp1_Axis_WrSts_tdata,
    output wire         poROL_Shl_Mem_Mp1_Axis_WrSts_tready,
    //------ Stream Data Output Channel ----------
    input wire          piSHL_Rol_Mem_Mp1_Axis_Write_tready,
    output wire [511:0] poROL_Shl_Mem_Mp1_Axis_Write_tdata,
    output wire [ 63:0] poROL_Shl_Mem_Mp1_Axis_Write_tkeep,
    output wire         poROL_Shl_Mem_Mp1_Axis_Write_tlast,
    output wire         poROL_Shl_Mem_Mp1_Axis_Write_tvalid,
    
    //------------------------------------------------
    //-- TOP : Secondary Clock (Asynchronous)
    //------------------------------------------------
    input wire          piTOP_250_00Clk,
       
    output wire         poVoid

);


// *****************************************************************************
// **  STRUCTURE
// *****************************************************************************

  //============================================================================
  //  SIGNAL (i.e. WIRES & REGISTERS) DECLARATIONS
  //============================================================================
 

   //============================================================================
  //  INST: EchoStoreAndForward
  //============================================================================
  EchoStoreAndForward ECHO (

    //------------------------------------------------------
	//-- SHELL / Role / Nts0 / Udp Interface
	//------------------------------------------------------                            
    //---- Input AXI-Write Stream Interface --------
    .siSHL_Rol_Nts0_Udp_TDATA       (piSHL_Rol_Nts0_Udp_Axis_tdata),
    .siSHL_Rol_Nts0_Udp_TKEEP       (piSHL_Rol_Nts0_Udp_Axis_tkeep),
    .siSHL_Rol_Nts0_Udp_TLAST       (piSHL_Rol_Nts0_Udp_Axis_tlast),
    .siSHL_Rol_Nts0_Udp_TVALID      (piSHL_Rol_Nts0_Udp_Axis_tvalid),
    .siSHL_Rol_Nts0_Udp_TREADY      (poROL_Shl_Nts0_Udp_Axis_tready),
    //---- Output AXI-Write Stream Interface ---------
    .soROL_Shl_Nts0_Udp_TREADY      (piSHL_Rol_Nts0_Udp_Axis_tready),
    .soROL_Shl_Nts0_Udp_TDATA       (poROL_Shl_Nts0_Udp_Axis_tdata),
    .soROL_Shl_Nts0_Udp_TKEEP       (poROL_Shl_Nts0_Udp_Axis_tkeep),
    .soROL_Shl_Nts0_Udp_TLAST       (poROL_Shl_Nts0_Udp_Axis_tlast),
    .soROL_Shl_Nts0_Udp_TVALID      (poROL_Shl_Nts0_Udp_Axis_tvalid),
     
    //------------------------------------------------------
	//-- SHELL / Role / Nts0 / Udp Interface
	//------------------------------------------------------                            
    //---- Input AXI-Write Stream Interface --------
    .siSHL_Rol_Nts0_Tcp_TDATA       (piSHL_Rol_Nts0_Tcp_Axis_tdata),
    .siSHL_Rol_Nts0_Tcp_TKEEP       (piSHL_Rol_Nts0_Tcp_Axis_tkeep),
    .siSHL_Rol_Nts0_Tcp_TLAST       (piSHL_Rol_Nts0_Tcp_Axis_tlast),
    .siSHL_Rol_Nts0_Tcp_TVALID      (piSHL_Rol_Nts0_Tcp_Axis_tvalid),
    .siSHL_Rol_Nts0_Tcp_TREADY      (poROL_Shl_Nts0_Tcp_Axis_tready),
    //---- Output AXI-Write Stream Interface ---------
    .soROL_Shl_Nts0_Tcp_TREADY      (piSHL_Rol_Nts0_Tcp_Axis_tready),
    .soROL_Shl_Nts0_Tcp_TDATA       (poROL_Shl_Nts0_Tcp_Axis_tdata),
    .soROL_Shl_Nts0_Tcp_TKEEP       (poROL_Shl_Nts0_Tcp_Axis_tkeep),
    .soROL_Shl_Nts0_Tcp_TLAST       (poROL_Shl_Nts0_Tcp_Axis_tlast),
    .soROL_Shl_Nts0_Tcp_TVALID      (poROL_Shl_Nts0_Tcp_Axis_tvalid),
                        
	//------------------------------------------------------
	//-- SHELL / Role / Mem / Mp0 Interface
	//------------------------------------------------------
	//---- Read Path (MM2S) ------------
    .soROL_Shl_Mem_Mp0_RdCmd_TREADY (piSHL_Rol_Mem_Mp0_RdCmd_TREADY),
    .soROL_Shl_Mem_Mp0_RdCmd_TDATA  (poROL_Shl_Mem_Mp0_RdCmd_TDATA),
    .soROL_Shl_Mem_Mp0_RdCmd_TVALID (poROL_Shl_Mem_Mp0_RdCmd_TVALID),
    .siSHL_Rol_Mem_Mp0_RdSts_TDATA  (piSHL_Rol_Mem_Mp0_RdSts_TDATA),
    .siSHL_Rol_Mem_Mp0_RdSts_TVALID (piSHL_Rol_Mem_Mp0_RdSts_TVALID),
    .siSHL_Rol_Mem_Mp0_RdSts_TREADY (poROL_Shl_Mem_Mp0_RdSts_TREADY),
    .siSHL_Rol_Mem_Mp0_Read_TDATA   (piSHL_Rol_Mem_Mp0_Read_TDATA),
    .siSHL_Rol_Mem_Mp0_Read_TKEEP   (piSHL_Rol_Mem_Mp0_Read_TKEEP),
    .siSHL_Rol_Mem_Mp0_Read_TLAST   (piSHL_Rol_Mem_Mp0_Read_TLAST),
    .siSHL_Rol_Mem_Mp0_Read_TVALID  (piSHL_Rol_Mem_Mp0_Read_TVALID),
    .siSHL_Rol_Mem_Mp0_Read_TREADY  (poROL_Shl_Mem_Mp0_Read_TREADY),
	//---- Write Path (S2MM) -----------
    .soROL_Shl_Mem_Mp0_WrCmd_TREADY (piSHL_Rol_Mem_Mp0_WrCmd_TREADY),
    .soROL_Shl_Mem_Mp0_WrCmd_TDATA  (poROL_Shl_Mem_Mp0_WrCmd_TDATA),
    .soROL_Shl_Mem_Mp0_WrCmd_TVALID (poROL_Shl_Mem_Mp0_WrCmd_TVALID),
    .siSHL_Rol_Mem_Mp0_WrSts_TDATA  (piSHL_Rol_Mem_Mp0_WrSts_TDATA),
    .siSHL_Rol_Mem_Mp0_WrSts_TVALID (piSHL_Rol_Mem_Mp0_WrSts_TVALID),
    .siSHL_Rol_Mem_Mp0_WrSts_TREADY (poROL_Shl_Mem_Mp0_WrSts_TREADY),
    .siSHL_Rol_Mem_Mp0_Write_TDATA  (piSHL_Rol_Mem_Mp0_Write_TDATA),
    .siSHL_Rol_Mem_Mp0_Write_TKEEP  (piSHL_Rol_Mem_Mp0_Write_TKEEP),
    .siSHL_Rol_Mem_Mp0_Write_TLAST  (piSHL_Rol_Mem_Mp0_Write_TLAST),
    .siSHL_Rol_Mem_Mp0_Write_TVALID (piSHL_Rol_Mem_Mp0_Write_TVALID),
    .siSHL_Rol_Mem_Mp0_Write_TREADY (poROL_Shl_Mem_Mp0_Write_TREADY),
                        
	//------------------------------------------------------
	//-- SHELL / Role / Mem / Mp1 Interface
	//------------------------------------------------------
	//---- Read Path (MM2S) ------------
    .soROL_Shl_Mem_Mp1_RdCmd_TREADY (piSHL_Rol_Mem_Mp1_RdCmd_TREADY),
    .soROL_Shl_Mem_Mp1_RdCmd_TDATA  (poROL_Shl_Mem_Mp1_RdCmd_TDATA),
    .soROL_Shl_Mem_Mp1_RdCmd_TVALID (poROL_Shl_Mem_Mp1_RdCmd_TVALID),
    .siSHL_Rol_Mem_Mp1_RdSts_TDATA  (piSHL_Rol_Mem_Mp1_RdSts_TDATA),
    .siSHL_Rol_Mem_Mp1_RdSts_TVALID (piSHL_Rol_Mem_Mp1_RdSts_TVALID),
    .siSHL_Rol_Mem_Mp1_RdSts_TREADY (poROL_Shl_Mem_Mp1_RdSts_TREADY),
    .siSHL_Rol_Mem_Mp1_Read_TDATA   (piSHL_Rol_Mem_Mp1_Read_TDATA),
    .siSHL_Rol_Mem_Mp1_Read_TKEEP   (piSHL_Rol_Mem_Mp1_Read_TKEEP),
    .siSHL_Rol_Mem_Mp1_Read_TLAST   (piSHL_Rol_Mem_Mp1_Read_TLAST),
    .siSHL_Rol_Mem_Mp1_Read_TVALID  (piSHL_Rol_Mem_Mp1_Read_TVALID),
    .siSHL_Rol_Mem_Mp1_Read_TREADY  (poROL_Shl_Mem_Mp1_Read_TREADY),
	//---- Write Path (S2MM) -----------
    .soROL_Shl_Mem_Mp1_WrCmd_TREADY (piSHL_Rol_Mem_Mp1_WrCmd_TREADY),
    .soROL_Shl_Mem_Mp1_WrCmd_TDATA  (poROL_Shl_Mem_Mp1_WrCmd_TDATA),
    .soROL_Shl_Mem_Mp1_WrCmd_TVALID (poROL_Shl_Mem_Mp1_WrCmd_TVALID),
    .siSHL_Rol_Mem_Mp1_WrSts_TDATA  (piSHL_Rol_Mem_Mp1_WrSts_TDATA),
    .siSHL_Rol_Mem_Mp1_WrSts_TVALID (piSHL_Rol_Mem_Mp1_WrSts_TVALID),
    .siSHL_Rol_Mem_Mp1_WrSts_TREADY (poROL_Shl_Mem_Mp1_WrSts_TREADY),
    .siSHL_Rol_Mem_Mp1_Write_TDATA  (piSHL_Rol_Mem_Mp1_Write_TDATA),
    .siSHL_Rol_Mem_Mp1_Write_TKEEP  (piSHL_Rol_Mem_Mp1_Write_TKEEP),
    .siSHL_Rol_Mem_Mp1_Write_TLAST  (piSHL_Rol_Mem_Mp1_Write_TLAST),
    .siSHL_Rol_Mem_Mp1_Write_TVALID (piSHL_Rol_Mem_Mp1_Write_TVALID),
    .siSHL_Rol_Mem_Mp1_Write_TREADY (poROL_Shl_Mem_Mp1_Write_TREADY),
                        
    //------------------------------------------------------
    //-- SHELL / Global Input Clock and Reset Interface
    //------------------------------------------------------
    .aclk                           (piSHL_156_25Clk),
    .aresetn                        (~piSHL_156_25Rst)
 
  );  // End of ECHO


endmodule

