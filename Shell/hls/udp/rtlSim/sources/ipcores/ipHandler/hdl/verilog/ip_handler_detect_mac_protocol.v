// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ip_handler_detect_mac_protocol (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dataIn_V_data_V_dout,
        dataIn_V_data_V_empty_n,
        dataIn_V_data_V_read,
        dataIn_V_keep_V_dout,
        dataIn_V_keep_V_empty_n,
        dataIn_V_keep_V_read,
        dataIn_V_last_V_dout,
        dataIn_V_last_V_empty_n,
        dataIn_V_last_V_read,
        ARPdataOut_V_data_V_din,
        ARPdataOut_V_data_V_full_n,
        ARPdataOut_V_data_V_write,
        ARPdataOut_V_keep_V_din,
        ARPdataOut_V_keep_V_full_n,
        ARPdataOut_V_keep_V_write,
        ARPdataOut_V_last_V_din,
        ARPdataOut_V_last_V_full_n,
        ARPdataOut_V_last_V_write,
        myMacAddress_V,
        lengthCheckIn_V_data_V_din,
        lengthCheckIn_V_data_V_full_n,
        lengthCheckIn_V_data_V_write,
        lengthCheckIn_V_keep_V_din,
        lengthCheckIn_V_keep_V_full_n,
        lengthCheckIn_V_keep_V_write,
        lengthCheckIn_V_last_V_din,
        lengthCheckIn_V_last_V_full_n,
        lengthCheckIn_V_last_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm0_0 = 1'b1;
parameter    ap_ST_st2_fsm1_1 = 2'b10;
parameter    ap_ST_st0_fsm1_0 = 2'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv16_806 = 16'b100000000110;
parameter    ap_const_lv16_800 = 16'b100000000000;
parameter    ap_const_lv48_FFFFFFFFFFFF = 48'b111111111111111111111111111111111111111111111111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] dataIn_V_data_V_dout;
input   dataIn_V_data_V_empty_n;
output   dataIn_V_data_V_read;
input  [7:0] dataIn_V_keep_V_dout;
input   dataIn_V_keep_V_empty_n;
output   dataIn_V_keep_V_read;
input  [0:0] dataIn_V_last_V_dout;
input   dataIn_V_last_V_empty_n;
output   dataIn_V_last_V_read;
output  [63:0] ARPdataOut_V_data_V_din;
input   ARPdataOut_V_data_V_full_n;
output   ARPdataOut_V_data_V_write;
output  [7:0] ARPdataOut_V_keep_V_din;
input   ARPdataOut_V_keep_V_full_n;
output   ARPdataOut_V_keep_V_write;
output  [0:0] ARPdataOut_V_last_V_din;
input   ARPdataOut_V_last_V_full_n;
output   ARPdataOut_V_last_V_write;
input  [47:0] myMacAddress_V;
output  [63:0] lengthCheckIn_V_data_V_din;
input   lengthCheckIn_V_data_V_full_n;
output   lengthCheckIn_V_data_V_write;
output  [7:0] lengthCheckIn_V_keep_V_din;
input   lengthCheckIn_V_keep_V_full_n;
output   lengthCheckIn_V_keep_V_write;
output  [0:0] lengthCheckIn_V_last_V_din;
input   lengthCheckIn_V_last_V_full_n;
output   lengthCheckIn_V_last_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm0 = 1'b1;
reg    ap_sig_cseq_ST_st1_fsm0_0;
reg    ap_sig_bdd_23;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm1 = 2'b1;
reg    ap_sig_cseq_ST_st0_fsm1_0;
reg    ap_sig_bdd_34;
wire    dataIn_V_data_V0_status;
wire   [0:0] tmp_nbreadreq_fu_134_p5;
reg    ap_sig_bdd_52;
wire    lengthCheckIn_V_data_V1_status;
reg   [0:0] dmp_fsmState_V_load_reg_439;
reg   [0:0] tmp_reg_443;
reg   [0:0] cond_reg_462;
reg   [0:0] tmp_4_reg_472;
reg   [0:0] tmp_6_reg_476;
wire    ARPdataOut_V_data_V1_status;
reg   [0:0] tmp_2_reg_480;
reg   [0:0] tmp_5_reg_484;
reg    ap_sig_bdd_99;
reg    ap_sig_cseq_ST_st2_fsm1_1;
reg    ap_sig_bdd_105;
reg   [0:0] dmp_fsmState_V = 1'b0;
reg   [15:0] dmp_macType_V = 16'b0000000000000000;
reg   [63:0] dmp_prevWord_data_V = 64'b0000000000000000000000000000000000000000000000000000000000000000;
reg   [7:0] dmp_prevWord_keep_V = 8'b00000000;
reg   [0:0] dmp_prevWord_last_V = 1'b0;
reg   [1:0] dmp_wordCount_V = 2'b00;
reg   [63:0] tmp_data_V_3_reg_447;
reg   [7:0] tmp_keep_V_2_reg_452;
wire   [0:0] tmp_last_V_2_fu_271_p1;
reg   [0:0] tmp_last_V_2_reg_457;
wire   [0:0] cond_fu_279_p2;
wire   [0:0] tmp_4_fu_332_p2;
wire   [0:0] tmp_6_fu_338_p2;
wire   [0:0] tmp_2_fu_388_p2;
wire   [0:0] tmp_5_fu_394_p2;
wire   [0:0] ap_reg_phiprechg_dmp_wordCount_V_flag_reg_182pp0_it0;
wire   [0:0] tmp_8_fu_285_p2;
reg   [0:0] dmp_wordCount_V_flag_phi_fu_185_p6;
wire   [0:0] tmp_3_fu_291_p2;
wire   [15:0] ap_reg_phiprechg_dmp_macType_V_loc_1_reg_196pp0_it0;
reg   [15:0] dmp_macType_V_loc_1_phi_fu_199_p6;
wire   [15:0] tmp_i_fu_317_p3;
wire   [0:0] ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_207pp0_it0;
reg   [0:0] dmp_wordCount_V_flag_1_phi_fu_210_p4;
wire   [1:0] ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_218pp0_it0;
reg   [1:0] dmp_wordCount_V_new_1_phi_fu_221_p4;
wire   [0:0] ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_229pp0_it0;
reg   [0:0] dmp_wordCount_V_flag_2_phi_fu_232_p4;
wire   [1:0] ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_241pp0_it0;
reg   [1:0] dmp_wordCount_V_new_2_phi_fu_244_p4;
reg    dataIn_V_data_V0_update;
reg    lengthCheckIn_V_data_V1_update;
reg    ARPdataOut_V_data_V1_update;
wire   [15:0] storemerge_fu_366_p1;
wire   [7:0] p_Result_2_i_fu_307_p4;
wire   [7:0] p_Result_i_fu_297_p4;
wire   [47:0] tmp_1_fu_344_p1;
wire   [0:0] tmp_7_fu_348_p2;
wire   [0:0] tmp_s_fu_354_p2;
wire   [0:0] or_cond_fu_360_p2;
reg   [0:0] ap_NS_fsm0;
reg   [1:0] ap_NS_fsm1;
reg    ap_sig_bdd_256;
reg    ap_sig_bdd_112;
reg    ap_sig_bdd_402;
reg    ap_sig_bdd_178;
reg    ap_sig_bdd_301;




/// the current state (ap_CS_fsm0) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm0
    if (ap_rst == 1'b1) begin
        ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
    end else begin
        ap_CS_fsm0 <= ap_NS_fsm0;
    end
end

/// the current state (ap_CS_fsm1) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm1
    if (ap_rst == 1'b1) begin
        ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
    end else begin
        ap_CS_fsm1 <= ap_NS_fsm1;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_112) begin
        if (~(dmp_fsmState_V == ap_const_lv1_0)) begin
            dmp_fsmState_V <= ap_const_lv1_0;
        end else if (ap_sig_bdd_256) begin
            dmp_fsmState_V <= ap_const_lv1_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_178) begin
        if (~(ap_const_lv1_0 == cond_fu_279_p2)) begin
            dmp_macType_V <= storemerge_fu_366_p1;
        end else if (ap_sig_bdd_402) begin
            dmp_macType_V <= tmp_i_fu_317_p3;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
        cond_reg_462 <= cond_fu_279_p2;
        tmp_data_V_3_reg_447 <= dataIn_V_data_V_dout;
        tmp_keep_V_2_reg_452 <= dataIn_V_keep_V_dout;
        tmp_last_V_2_reg_457 <= dataIn_V_last_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
        dmp_fsmState_V_load_reg_439 <= dmp_fsmState_V;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_reg_443) & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99))) begin
        dmp_prevWord_data_V <= tmp_data_V_3_reg_447;
        dmp_prevWord_keep_V <= tmp_keep_V_2_reg_452;
        dmp_prevWord_last_V <= tmp_last_V_2_reg_457;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))) & ~(ap_const_lv1_0 == dmp_wordCount_V_flag_2_phi_fu_232_p4))) begin
        dmp_wordCount_V <= dmp_wordCount_V_new_2_phi_fu_244_p4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))) & ~(dmp_fsmState_V == ap_const_lv1_0))) begin
        tmp_2_reg_480 <= tmp_2_fu_388_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))) & (ap_const_lv1_0 == cond_fu_279_p2))) begin
        tmp_4_reg_472 <= tmp_4_fu_332_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))) & ~(dmp_fsmState_V == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_2_fu_388_p2))) begin
        tmp_5_reg_484 <= tmp_5_fu_394_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))) & (ap_const_lv1_0 == cond_fu_279_p2) & (ap_const_lv1_0 == tmp_4_fu_332_p2))) begin
        tmp_6_reg_476 <= tmp_6_fu_338_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
        tmp_reg_443 <= tmp_nbreadreq_fu_134_p5;
    end
end

/// ARPdataOut_V_data_V1_update assign process. ///
always @ (ap_done_reg or dmp_fsmState_V_load_reg_439 or tmp_reg_443 or cond_reg_462 or tmp_4_reg_472 or tmp_2_reg_480 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    if ((((ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_reg_443) & (ap_const_lv1_0 == cond_reg_462) & ~(ap_const_lv1_0 == tmp_4_reg_472) & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99)) | (~(ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_2_reg_480) & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99)))) begin
        ARPdataOut_V_data_V1_update = ap_const_logic_1;
    end else begin
        ARPdataOut_V_data_V1_update = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm0_0 or ap_sig_cseq_ST_st0_fsm1_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st0_fsm1_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm0_0 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st0_fsm1_0 assign process. ///
always @ (ap_sig_bdd_34)
begin
    if (ap_sig_bdd_34) begin
        ap_sig_cseq_ST_st0_fsm1_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st0_fsm1_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm0_0 assign process. ///
always @ (ap_sig_bdd_23)
begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm0_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm0_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm1_1 assign process. ///
always @ (ap_sig_bdd_105)
begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st2_fsm1_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm1_1 = ap_const_logic_0;
    end
end

/// dataIn_V_data_V0_update assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm0_0 or tmp_nbreadreq_fu_134_p5 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1 or dmp_fsmState_V)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
        dataIn_V_data_V0_update = ap_const_logic_1;
    end else begin
        dataIn_V_data_V0_update = ap_const_logic_0;
    end
end

/// dmp_macType_V_loc_1_phi_fu_199_p6 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm0_0 or tmp_nbreadreq_fu_134_p5 or dmp_fsmState_V or dmp_macType_V or cond_fu_279_p2 or tmp_8_fu_285_p2 or tmp_3_fu_291_p2 or ap_reg_phiprechg_dmp_macType_V_loc_1_reg_196pp0_it0 or tmp_i_fu_317_p3)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & ~(ap_const_lv1_0 == tmp_8_fu_285_p2) & (ap_const_lv1_0 == tmp_3_fu_291_p2))) begin
        dmp_macType_V_loc_1_phi_fu_199_p6 = tmp_i_fu_317_p3;
    end else if ((((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & (ap_const_lv1_0 == tmp_8_fu_285_p2)) | ((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & ~(ap_const_lv1_0 == tmp_8_fu_285_p2) & ~(ap_const_lv1_0 == tmp_3_fu_291_p2)))) begin
        dmp_macType_V_loc_1_phi_fu_199_p6 = dmp_macType_V;
    end else begin
        dmp_macType_V_loc_1_phi_fu_199_p6 = ap_reg_phiprechg_dmp_macType_V_loc_1_reg_196pp0_it0;
    end
end

/// dmp_wordCount_V_flag_1_phi_fu_210_p4 assign process. ///
always @ (cond_fu_279_p2 or dmp_wordCount_V_flag_phi_fu_185_p6 or ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_207pp0_it0 or ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        if ((ap_const_lv1_0 == cond_fu_279_p2)) begin
            dmp_wordCount_V_flag_1_phi_fu_210_p4 = dmp_wordCount_V_flag_phi_fu_185_p6;
        end else if (~(ap_const_lv1_0 == cond_fu_279_p2)) begin
            dmp_wordCount_V_flag_1_phi_fu_210_p4 = ap_const_lv1_1;
        end else begin
            dmp_wordCount_V_flag_1_phi_fu_210_p4 = ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_207pp0_it0;
        end
    end else begin
        dmp_wordCount_V_flag_1_phi_fu_210_p4 = ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_207pp0_it0;
    end
end

/// dmp_wordCount_V_flag_2_phi_fu_232_p4 assign process. ///
always @ (tmp_last_V_2_fu_271_p1 or dmp_wordCount_V_flag_1_phi_fu_210_p4 or ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_229pp0_it0 or ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        if ((ap_const_lv1_0 == tmp_last_V_2_fu_271_p1)) begin
            dmp_wordCount_V_flag_2_phi_fu_232_p4 = dmp_wordCount_V_flag_1_phi_fu_210_p4;
        end else if (~(ap_const_lv1_0 == tmp_last_V_2_fu_271_p1)) begin
            dmp_wordCount_V_flag_2_phi_fu_232_p4 = ap_const_lv1_1;
        end else begin
            dmp_wordCount_V_flag_2_phi_fu_232_p4 = ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_229pp0_it0;
        end
    end else begin
        dmp_wordCount_V_flag_2_phi_fu_232_p4 = ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_229pp0_it0;
    end
end

/// dmp_wordCount_V_flag_phi_fu_185_p6 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm0_0 or tmp_nbreadreq_fu_134_p5 or dmp_fsmState_V or cond_fu_279_p2 or ap_reg_phiprechg_dmp_wordCount_V_flag_reg_182pp0_it0 or tmp_8_fu_285_p2 or tmp_3_fu_291_p2)
begin
    if ((((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & ~(ap_const_lv1_0 == tmp_8_fu_285_p2) & (ap_const_lv1_0 == tmp_3_fu_291_p2)) | ((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & ~(ap_const_lv1_0 == tmp_8_fu_285_p2) & ~(ap_const_lv1_0 == tmp_3_fu_291_p2)))) begin
        dmp_wordCount_V_flag_phi_fu_185_p6 = ap_const_lv1_1;
    end else if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & (ap_const_lv1_0 == cond_fu_279_p2) & (ap_const_lv1_0 == tmp_8_fu_285_p2))) begin
        dmp_wordCount_V_flag_phi_fu_185_p6 = ap_const_lv1_0;
    end else begin
        dmp_wordCount_V_flag_phi_fu_185_p6 = ap_reg_phiprechg_dmp_wordCount_V_flag_reg_182pp0_it0;
    end
end

/// dmp_wordCount_V_new_1_phi_fu_221_p4 assign process. ///
always @ (cond_fu_279_p2 or ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_218pp0_it0 or ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        if ((ap_const_lv1_0 == cond_fu_279_p2)) begin
            dmp_wordCount_V_new_1_phi_fu_221_p4 = ap_const_lv2_2;
        end else if (~(ap_const_lv1_0 == cond_fu_279_p2)) begin
            dmp_wordCount_V_new_1_phi_fu_221_p4 = ap_const_lv2_1;
        end else begin
            dmp_wordCount_V_new_1_phi_fu_221_p4 = ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_218pp0_it0;
        end
    end else begin
        dmp_wordCount_V_new_1_phi_fu_221_p4 = ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_218pp0_it0;
    end
end

/// dmp_wordCount_V_new_2_phi_fu_244_p4 assign process. ///
always @ (tmp_last_V_2_fu_271_p1 or dmp_wordCount_V_new_1_phi_fu_221_p4 or ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_241pp0_it0 or ap_sig_bdd_301)
begin
    if (ap_sig_bdd_301) begin
        if ((ap_const_lv1_0 == tmp_last_V_2_fu_271_p1)) begin
            dmp_wordCount_V_new_2_phi_fu_244_p4 = dmp_wordCount_V_new_1_phi_fu_221_p4;
        end else if (~(ap_const_lv1_0 == tmp_last_V_2_fu_271_p1)) begin
            dmp_wordCount_V_new_2_phi_fu_244_p4 = ap_const_lv2_0;
        end else begin
            dmp_wordCount_V_new_2_phi_fu_244_p4 = ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_241pp0_it0;
        end
    end else begin
        dmp_wordCount_V_new_2_phi_fu_244_p4 = ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_241pp0_it0;
    end
end

/// lengthCheckIn_V_data_V1_update assign process. ///
always @ (ap_done_reg or dmp_fsmState_V_load_reg_439 or tmp_reg_443 or cond_reg_462 or tmp_4_reg_472 or tmp_6_reg_476 or tmp_2_reg_480 or tmp_5_reg_484 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    if ((((ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_reg_443) & (ap_const_lv1_0 == cond_reg_462) & (ap_const_lv1_0 == tmp_4_reg_472) & ~(ap_const_lv1_0 == tmp_6_reg_476) & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99)) | (~(ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & (ap_const_lv1_0 == tmp_2_reg_480) & ~(ap_const_lv1_0 == tmp_5_reg_484) & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99)))) begin
        lengthCheckIn_V_data_V1_update = ap_const_logic_1;
    end else begin
        lengthCheckIn_V_data_V1_update = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm1) of the state machine. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm0_0 or ap_CS_fsm1 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    case (ap_CS_fsm1)
        ap_ST_st2_fsm1_1 : 
        begin
            if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99) & ~ap_sig_bdd_52)) begin
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            end else if ((~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_99) & (~(ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ap_sig_bdd_52)))) begin
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            end else begin
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            end
        end
        ap_ST_st0_fsm1_0 : 
        begin
            if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))))) begin
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            end else begin
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            end
        end
        default : 
        begin
            ap_NS_fsm1 = 'bx;
        end
    endcase
end

/// the next state (ap_NS_fsm0) of the state machine. ///
always @ (ap_done_reg or ap_CS_fsm0 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    case (ap_CS_fsm0)
        ap_ST_st1_fsm0_0 : 
        begin
            ap_NS_fsm0 = ap_ST_st1_fsm0_0;
        end
        default : 
        begin
            ap_NS_fsm0 = 'bx;
        end
    endcase
end

assign ARPdataOut_V_data_V1_status = (ARPdataOut_V_data_V_full_n & ARPdataOut_V_keep_V_full_n & ARPdataOut_V_last_V_full_n);
assign ARPdataOut_V_data_V_din = dmp_prevWord_data_V;
assign ARPdataOut_V_data_V_write = ARPdataOut_V_data_V1_update;
assign ARPdataOut_V_keep_V_din = dmp_prevWord_keep_V;
assign ARPdataOut_V_keep_V_write = ARPdataOut_V_data_V1_update;
assign ARPdataOut_V_last_V_din = dmp_prevWord_last_V;
assign ARPdataOut_V_last_V_write = ARPdataOut_V_data_V1_update;
assign ap_reg_phiprechg_dmp_macType_V_loc_1_reg_196pp0_it0 = 'bx;
assign ap_reg_phiprechg_dmp_wordCount_V_flag_1_reg_207pp0_it0 = 'bx;
assign ap_reg_phiprechg_dmp_wordCount_V_flag_2_reg_229pp0_it0 = 'bx;
assign ap_reg_phiprechg_dmp_wordCount_V_flag_reg_182pp0_it0 = 'bx;
assign ap_reg_phiprechg_dmp_wordCount_V_new_1_reg_218pp0_it0 = 'bx;
assign ap_reg_phiprechg_dmp_wordCount_V_new_2_reg_241pp0_it0 = 'bx;

/// ap_sig_bdd_105 assign process. ///
always @ (ap_CS_fsm1)
begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm1[ap_const_lv32_1]);
end

/// ap_sig_bdd_112 assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm0_0 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1)
begin
    ap_sig_bdd_112 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))));
end

/// ap_sig_bdd_178 assign process. ///
always @ (ap_done_reg or ap_sig_cseq_ST_st1_fsm0_0 or tmp_nbreadreq_fu_134_p5 or ap_sig_bdd_52 or ap_sig_bdd_99 or ap_sig_cseq_ST_st2_fsm1_1 or dmp_fsmState_V)
begin
    ap_sig_bdd_178 = ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~((ap_done_reg == ap_const_logic_1) | ap_sig_bdd_52 | (ap_sig_bdd_99 & (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm1_1))));
end

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm0)
begin
    ap_sig_bdd_23 = (ap_CS_fsm0[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_256 assign process. ///
always @ (tmp_nbreadreq_fu_134_p5 or dmp_fsmState_V or tmp_last_V_2_fu_271_p1)
begin
    ap_sig_bdd_256 = ((dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5) & ~(ap_const_lv1_0 == tmp_last_V_2_fu_271_p1));
end

/// ap_sig_bdd_301 assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm0_0 or tmp_nbreadreq_fu_134_p5 or dmp_fsmState_V)
begin
    ap_sig_bdd_301 = ((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm0_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5));
end

/// ap_sig_bdd_34 assign process. ///
always @ (ap_CS_fsm1)
begin
    ap_sig_bdd_34 = (ap_const_lv1_1 == ap_CS_fsm1[ap_const_lv32_0]);
end

/// ap_sig_bdd_402 assign process. ///
always @ (cond_fu_279_p2 or tmp_8_fu_285_p2 or tmp_3_fu_291_p2)
begin
    ap_sig_bdd_402 = ((ap_const_lv1_0 == cond_fu_279_p2) & ~(ap_const_lv1_0 == tmp_8_fu_285_p2) & (ap_const_lv1_0 == tmp_3_fu_291_p2));
end

/// ap_sig_bdd_52 assign process. ///
always @ (ap_start or ap_done_reg or dataIn_V_data_V0_status or tmp_nbreadreq_fu_134_p5 or dmp_fsmState_V)
begin
    ap_sig_bdd_52 = (((dataIn_V_data_V0_status == ap_const_logic_0) & (dmp_fsmState_V == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_nbreadreq_fu_134_p5)) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_99 assign process. ///
always @ (lengthCheckIn_V_data_V1_status or dmp_fsmState_V_load_reg_439 or tmp_reg_443 or cond_reg_462 or tmp_4_reg_472 or tmp_6_reg_476 or ARPdataOut_V_data_V1_status or tmp_2_reg_480 or tmp_5_reg_484)
begin
    ap_sig_bdd_99 = (((lengthCheckIn_V_data_V1_status == ap_const_logic_0) & (ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_reg_443) & (ap_const_lv1_0 == cond_reg_462) & (ap_const_lv1_0 == tmp_4_reg_472) & ~(ap_const_lv1_0 == tmp_6_reg_476)) | ((ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_reg_443) & (ap_const_lv1_0 == cond_reg_462) & (ARPdataOut_V_data_V1_status == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_4_reg_472)) | ((lengthCheckIn_V_data_V1_status == ap_const_logic_0) & ~(ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & (ap_const_lv1_0 == tmp_2_reg_480) & ~(ap_const_lv1_0 == tmp_5_reg_484)) | ((ARPdataOut_V_data_V1_status == ap_const_logic_0) & ~(ap_const_lv1_0 == dmp_fsmState_V_load_reg_439) & ~(ap_const_lv1_0 == tmp_2_reg_480)));
end
assign cond_fu_279_p2 = (dmp_wordCount_V == ap_const_lv2_0? 1'b1: 1'b0);
assign dataIn_V_data_V0_status = (dataIn_V_data_V_empty_n & dataIn_V_keep_V_empty_n & dataIn_V_last_V_empty_n);
assign dataIn_V_data_V_read = dataIn_V_data_V0_update;
assign dataIn_V_keep_V_read = dataIn_V_data_V0_update;
assign dataIn_V_last_V_read = dataIn_V_data_V0_update;
assign lengthCheckIn_V_data_V1_status = (lengthCheckIn_V_data_V_full_n & lengthCheckIn_V_keep_V_full_n & lengthCheckIn_V_last_V_full_n);
assign lengthCheckIn_V_data_V_din = dmp_prevWord_data_V;
assign lengthCheckIn_V_data_V_write = lengthCheckIn_V_data_V1_update;
assign lengthCheckIn_V_keep_V_din = dmp_prevWord_keep_V;
assign lengthCheckIn_V_keep_V_write = lengthCheckIn_V_data_V1_update;
assign lengthCheckIn_V_last_V_din = dmp_prevWord_last_V;
assign lengthCheckIn_V_last_V_write = lengthCheckIn_V_data_V1_update;
assign or_cond_fu_360_p2 = (tmp_7_fu_348_p2 | tmp_s_fu_354_p2);
assign p_Result_2_i_fu_307_p4 = {{dataIn_V_data_V_dout[ap_const_lv32_27 : ap_const_lv32_20]}};
assign p_Result_i_fu_297_p4 = {{dataIn_V_data_V_dout[ap_const_lv32_2F : ap_const_lv32_28]}};
assign storemerge_fu_366_p1 = or_cond_fu_360_p2;
assign tmp_1_fu_344_p1 = dataIn_V_data_V_dout[47:0];
assign tmp_2_fu_388_p2 = (dmp_macType_V == ap_const_lv16_806? 1'b1: 1'b0);
assign tmp_3_fu_291_p2 = (dmp_macType_V == ap_const_lv16_0? 1'b1: 1'b0);
assign tmp_4_fu_332_p2 = (dmp_macType_V_loc_1_phi_fu_199_p6 == ap_const_lv16_806? 1'b1: 1'b0);
assign tmp_5_fu_394_p2 = (dmp_macType_V == ap_const_lv16_800? 1'b1: 1'b0);
assign tmp_6_fu_338_p2 = (dmp_macType_V_loc_1_phi_fu_199_p6 == ap_const_lv16_800? 1'b1: 1'b0);
assign tmp_7_fu_348_p2 = (tmp_1_fu_344_p1 == myMacAddress_V? 1'b1: 1'b0);
assign tmp_8_fu_285_p2 = (dmp_wordCount_V == ap_const_lv2_1? 1'b1: 1'b0);
assign tmp_i_fu_317_p3 = {{p_Result_2_i_fu_307_p4}, {p_Result_i_fu_297_p4}};
assign tmp_last_V_2_fu_271_p1 = dataIn_V_last_V_dout;
assign tmp_nbreadreq_fu_134_p5 = (dataIn_V_data_V_empty_n & dataIn_V_keep_V_empty_n & dataIn_V_last_V_empty_n);
assign tmp_s_fu_354_p2 = (tmp_1_fu_344_p1 == ap_const_lv48_FFFFFFFFFFFF? 1'b1: 1'b0);


endmodule //ip_handler_detect_mac_protocol

