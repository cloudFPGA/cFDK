// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dhcp_client,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx690tffg1761-2,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.513000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=541,HLS_SYN_LUT=1062}" *)

module dhcp_client (
        openPort_V_V_din,
        openPort_V_V_full_n,
        openPort_V_V_write,
        confirmPortStatus_V_dout,
        confirmPortStatus_V_empty_n,
        confirmPortStatus_V_read,
        dataInMeta_V_dout,
        dataInMeta_V_empty_n,
        dataInMeta_V_read,
        dataIn_V_data_V_dout,
        dataIn_V_data_V_empty_n,
        dataIn_V_data_V_read,
        dataIn_V_keep_V_dout,
        dataIn_V_keep_V_empty_n,
        dataIn_V_keep_V_read,
        dataIn_V_last_V_dout,
        dataIn_V_last_V_empty_n,
        dataIn_V_last_V_read,
        dataOutMeta_V_din,
        dataOutMeta_V_full_n,
        dataOutMeta_V_write,
        dataOutLength_V_V_din,
        dataOutLength_V_V_full_n,
        dataOutLength_V_V_write,
        dataOut_V_data_V_din,
        dataOut_V_data_V_full_n,
        dataOut_V_data_V_write,
        dataOut_V_keep_V_din,
        dataOut_V_keep_V_full_n,
        dataOut_V_keep_V_write,
        dataOut_V_last_V_din,
        dataOut_V_last_V_full_n,
        dataOut_V_last_V_write,
        dhcpIpAddressOut_V,
        myMacAddress_V,
        ap_clk,
        ap_rst,
        dhcpIpAddressOut_V_ap_vld
);

parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv96_0 = 96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

output  [15:0] openPort_V_V_din;
input   openPort_V_V_full_n;
output   openPort_V_V_write;
input   confirmPortStatus_V_dout;
input   confirmPortStatus_V_empty_n;
output   confirmPortStatus_V_read;
input  [95:0] dataInMeta_V_dout;
input   dataInMeta_V_empty_n;
output   dataInMeta_V_read;
input  [63:0] dataIn_V_data_V_dout;
input   dataIn_V_data_V_empty_n;
output   dataIn_V_data_V_read;
input  [7:0] dataIn_V_keep_V_dout;
input   dataIn_V_keep_V_empty_n;
output   dataIn_V_keep_V_read;
input  [0:0] dataIn_V_last_V_dout;
input   dataIn_V_last_V_empty_n;
output   dataIn_V_last_V_read;
output  [95:0] dataOutMeta_V_din;
input   dataOutMeta_V_full_n;
output   dataOutMeta_V_write;
output  [15:0] dataOutLength_V_V_din;
input   dataOutLength_V_V_full_n;
output   dataOutLength_V_V_write;
output  [63:0] dataOut_V_data_V_din;
input   dataOut_V_data_V_full_n;
output   dataOut_V_data_V_write;
output  [7:0] dataOut_V_keep_V_din;
input   dataOut_V_keep_V_full_n;
output   dataOut_V_keep_V_write;
output  [0:0] dataOut_V_last_V_din;
input   dataOut_V_last_V_full_n;
output   dataOut_V_last_V_write;
output  [31:0] dhcpIpAddressOut_V;
input  [47:0] myMacAddress_V;
input   ap_clk;
input   ap_rst;
output   dhcpIpAddressOut_V_ap_vld;

reg    dhcp_client_open_dhcp_port_U0_ap_start = 1'b0;
wire    dhcp_client_open_dhcp_port_U0_ap_done;
wire    dhcp_client_open_dhcp_port_U0_ap_continue;
wire    dhcp_client_open_dhcp_port_U0_ap_idle;
wire    dhcp_client_open_dhcp_port_U0_ap_ready;
wire   [15:0] dhcp_client_open_dhcp_port_U0_openPort_V_V_din;
wire    dhcp_client_open_dhcp_port_U0_openPort_V_V_full_n;
wire    dhcp_client_open_dhcp_port_U0_openPort_V_V_write;
wire    dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_dout;
wire    dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_empty_n;
wire    dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_read;
wire   [0:0] dhcp_client_open_dhcp_port_U0_portOpen_V_V_din;
wire    dhcp_client_open_dhcp_port_U0_portOpen_V_V_full_n;
wire    dhcp_client_open_dhcp_port_U0_portOpen_V_V_write;
wire    ap_sig_hs_continue;
wire    dhcp_client_receive_message_U0_ap_start;
wire    dhcp_client_receive_message_U0_ap_done;
wire    dhcp_client_receive_message_U0_ap_continue;
wire    dhcp_client_receive_message_U0_ap_idle;
wire    dhcp_client_receive_message_U0_ap_ready;
wire   [95:0] dhcp_client_receive_message_U0_dataInMeta_V_dout;
wire    dhcp_client_receive_message_U0_dataInMeta_V_empty_n;
wire    dhcp_client_receive_message_U0_dataInMeta_V_read;
wire   [103:0] dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_din;
wire    dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_full_n;
wire    dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_write;
wire   [63:0] dhcp_client_receive_message_U0_dataIn_V_data_V_dout;
wire    dhcp_client_receive_message_U0_dataIn_V_data_V_empty_n;
wire    dhcp_client_receive_message_U0_dataIn_V_data_V_read;
wire   [7:0] dhcp_client_receive_message_U0_dataIn_V_keep_V_dout;
wire    dhcp_client_receive_message_U0_dataIn_V_keep_V_empty_n;
wire    dhcp_client_receive_message_U0_dataIn_V_keep_V_read;
wire   [0:0] dhcp_client_receive_message_U0_dataIn_V_last_V_dout;
wire    dhcp_client_receive_message_U0_dataIn_V_last_V_empty_n;
wire    dhcp_client_receive_message_U0_dataIn_V_last_V_read;
wire   [47:0] dhcp_client_receive_message_U0_myMacAddress_V;
reg    dhcp_client_dhcp_fsm_U0_ap_start = 1'b0;
wire    dhcp_client_dhcp_fsm_U0_ap_done;
wire    dhcp_client_dhcp_fsm_U0_ap_continue;
wire    dhcp_client_dhcp_fsm_U0_ap_idle;
wire    dhcp_client_dhcp_fsm_U0_ap_ready;
wire   [103:0] dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_dout;
wire    dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_empty_n;
wire    dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_read;
wire   [0:0] dhcp_client_dhcp_fsm_U0_portOpen_V_V_dout;
wire    dhcp_client_dhcp_fsm_U0_portOpen_V_V_empty_n;
wire    dhcp_client_dhcp_fsm_U0_portOpen_V_V_read;
wire   [71:0] dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_din;
wire    dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_full_n;
wire    dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_write;
wire   [31:0] dhcp_client_dhcp_fsm_U0_ipAddressOut_V;
wire    dhcp_client_dhcp_fsm_U0_ipAddressOut_V_ap_vld;
wire    dhcp_client_send_message_U0_ap_start;
wire    dhcp_client_send_message_U0_ap_done;
wire    dhcp_client_send_message_U0_ap_continue;
wire    dhcp_client_send_message_U0_ap_idle;
wire    dhcp_client_send_message_U0_ap_ready;
wire   [71:0] dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_dout;
wire    dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_empty_n;
wire    dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_read;
wire   [95:0] dhcp_client_send_message_U0_dataOutMeta_V_din;
wire    dhcp_client_send_message_U0_dataOutMeta_V_full_n;
wire    dhcp_client_send_message_U0_dataOutMeta_V_write;
wire   [15:0] dhcp_client_send_message_U0_dataOutLength_V_V_din;
wire    dhcp_client_send_message_U0_dataOutLength_V_V_full_n;
wire    dhcp_client_send_message_U0_dataOutLength_V_V_write;
wire   [63:0] dhcp_client_send_message_U0_dataOut_V_data_V_din;
wire    dhcp_client_send_message_U0_dataOut_V_data_V_full_n;
wire    dhcp_client_send_message_U0_dataOut_V_data_V_write;
wire   [7:0] dhcp_client_send_message_U0_dataOut_V_keep_V_din;
wire    dhcp_client_send_message_U0_dataOut_V_keep_V_full_n;
wire    dhcp_client_send_message_U0_dataOut_V_keep_V_write;
wire   [0:0] dhcp_client_send_message_U0_dataOut_V_last_V_din;
wire    dhcp_client_send_message_U0_dataOut_V_last_V_full_n;
wire    dhcp_client_send_message_U0_dataOut_V_last_V_write;
wire   [47:0] dhcp_client_send_message_U0_myMacAddress_V;
wire    portOpen_V_V_U_ap_dummy_ce;
wire   [0:0] portOpen_V_V_din;
wire    portOpen_V_V_full_n;
wire    portOpen_V_V_write;
wire   [0:0] portOpen_V_V_dout;
wire    portOpen_V_V_empty_n;
wire    portOpen_V_V_read;
wire    dhcp_replyMetaFifo_V_U_ap_dummy_ce;
wire   [103:0] dhcp_replyMetaFifo_V_din;
wire    dhcp_replyMetaFifo_V_full_n;
wire    dhcp_replyMetaFifo_V_write;
wire   [103:0] dhcp_replyMetaFifo_V_dout;
wire    dhcp_replyMetaFifo_V_empty_n;
wire    dhcp_replyMetaFifo_V_read;
wire    dhcp_requestMetaFifo_V_U_ap_dummy_ce;
wire   [71:0] dhcp_requestMetaFifo_V_din;
wire    dhcp_requestMetaFifo_V_full_n;
wire    dhcp_requestMetaFifo_V_write;
wire   [71:0] dhcp_requestMetaFifo_V_dout;
wire    dhcp_requestMetaFifo_V_empty_n;
wire    dhcp_requestMetaFifo_V_read;
reg    ap_CS;
reg    ap_reg_procdone_dhcp_client_open_dhcp_port_U0 = 1'b0;
reg    ap_reg_procdone_dhcp_client_dhcp_fsm_U0 = 1'b0;
reg    ap_reg_procdone_dhcp_client_send_message_U0 = 1'b0;
reg    ap_sig_hs_done;


dhcp_client_open_dhcp_port dhcp_client_open_dhcp_port_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( dhcp_client_open_dhcp_port_U0_ap_start ),
    .ap_done( dhcp_client_open_dhcp_port_U0_ap_done ),
    .ap_continue( dhcp_client_open_dhcp_port_U0_ap_continue ),
    .ap_idle( dhcp_client_open_dhcp_port_U0_ap_idle ),
    .ap_ready( dhcp_client_open_dhcp_port_U0_ap_ready ),
    .openPort_V_V_din( dhcp_client_open_dhcp_port_U0_openPort_V_V_din ),
    .openPort_V_V_full_n( dhcp_client_open_dhcp_port_U0_openPort_V_V_full_n ),
    .openPort_V_V_write( dhcp_client_open_dhcp_port_U0_openPort_V_V_write ),
    .confirmPortStatus_V_dout( dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_dout ),
    .confirmPortStatus_V_empty_n( dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_empty_n ),
    .confirmPortStatus_V_read( dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_read ),
    .portOpen_V_V_din( dhcp_client_open_dhcp_port_U0_portOpen_V_V_din ),
    .portOpen_V_V_full_n( dhcp_client_open_dhcp_port_U0_portOpen_V_V_full_n ),
    .portOpen_V_V_write( dhcp_client_open_dhcp_port_U0_portOpen_V_V_write )
);

dhcp_client_receive_message dhcp_client_receive_message_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( dhcp_client_receive_message_U0_ap_start ),
    .ap_done( dhcp_client_receive_message_U0_ap_done ),
    .ap_continue( dhcp_client_receive_message_U0_ap_continue ),
    .ap_idle( dhcp_client_receive_message_U0_ap_idle ),
    .ap_ready( dhcp_client_receive_message_U0_ap_ready ),
    .dataInMeta_V_dout( dhcp_client_receive_message_U0_dataInMeta_V_dout ),
    .dataInMeta_V_empty_n( dhcp_client_receive_message_U0_dataInMeta_V_empty_n ),
    .dataInMeta_V_read( dhcp_client_receive_message_U0_dataInMeta_V_read ),
    .dhcp_replyMetaFifo_V_din( dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_din ),
    .dhcp_replyMetaFifo_V_full_n( dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_full_n ),
    .dhcp_replyMetaFifo_V_write( dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_write ),
    .dataIn_V_data_V_dout( dhcp_client_receive_message_U0_dataIn_V_data_V_dout ),
    .dataIn_V_data_V_empty_n( dhcp_client_receive_message_U0_dataIn_V_data_V_empty_n ),
    .dataIn_V_data_V_read( dhcp_client_receive_message_U0_dataIn_V_data_V_read ),
    .dataIn_V_keep_V_dout( dhcp_client_receive_message_U0_dataIn_V_keep_V_dout ),
    .dataIn_V_keep_V_empty_n( dhcp_client_receive_message_U0_dataIn_V_keep_V_empty_n ),
    .dataIn_V_keep_V_read( dhcp_client_receive_message_U0_dataIn_V_keep_V_read ),
    .dataIn_V_last_V_dout( dhcp_client_receive_message_U0_dataIn_V_last_V_dout ),
    .dataIn_V_last_V_empty_n( dhcp_client_receive_message_U0_dataIn_V_last_V_empty_n ),
    .dataIn_V_last_V_read( dhcp_client_receive_message_U0_dataIn_V_last_V_read ),
    .myMacAddress_V( dhcp_client_receive_message_U0_myMacAddress_V )
);

dhcp_client_dhcp_fsm dhcp_client_dhcp_fsm_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( dhcp_client_dhcp_fsm_U0_ap_start ),
    .ap_done( dhcp_client_dhcp_fsm_U0_ap_done ),
    .ap_continue( dhcp_client_dhcp_fsm_U0_ap_continue ),
    .ap_idle( dhcp_client_dhcp_fsm_U0_ap_idle ),
    .ap_ready( dhcp_client_dhcp_fsm_U0_ap_ready ),
    .dhcp_replyMetaFifo_V_dout( dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_dout ),
    .dhcp_replyMetaFifo_V_empty_n( dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_empty_n ),
    .dhcp_replyMetaFifo_V_read( dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_read ),
    .portOpen_V_V_dout( dhcp_client_dhcp_fsm_U0_portOpen_V_V_dout ),
    .portOpen_V_V_empty_n( dhcp_client_dhcp_fsm_U0_portOpen_V_V_empty_n ),
    .portOpen_V_V_read( dhcp_client_dhcp_fsm_U0_portOpen_V_V_read ),
    .dhcp_requestMetaFifo_V_din( dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_din ),
    .dhcp_requestMetaFifo_V_full_n( dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_full_n ),
    .dhcp_requestMetaFifo_V_write( dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_write ),
    .ipAddressOut_V( dhcp_client_dhcp_fsm_U0_ipAddressOut_V ),
    .ipAddressOut_V_ap_vld( dhcp_client_dhcp_fsm_U0_ipAddressOut_V_ap_vld )
);

dhcp_client_send_message dhcp_client_send_message_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( dhcp_client_send_message_U0_ap_start ),
    .ap_done( dhcp_client_send_message_U0_ap_done ),
    .ap_continue( dhcp_client_send_message_U0_ap_continue ),
    .ap_idle( dhcp_client_send_message_U0_ap_idle ),
    .ap_ready( dhcp_client_send_message_U0_ap_ready ),
    .dhcp_requestMetaFifo_V_dout( dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_dout ),
    .dhcp_requestMetaFifo_V_empty_n( dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_empty_n ),
    .dhcp_requestMetaFifo_V_read( dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_read ),
    .dataOutMeta_V_din( dhcp_client_send_message_U0_dataOutMeta_V_din ),
    .dataOutMeta_V_full_n( dhcp_client_send_message_U0_dataOutMeta_V_full_n ),
    .dataOutMeta_V_write( dhcp_client_send_message_U0_dataOutMeta_V_write ),
    .dataOutLength_V_V_din( dhcp_client_send_message_U0_dataOutLength_V_V_din ),
    .dataOutLength_V_V_full_n( dhcp_client_send_message_U0_dataOutLength_V_V_full_n ),
    .dataOutLength_V_V_write( dhcp_client_send_message_U0_dataOutLength_V_V_write ),
    .dataOut_V_data_V_din( dhcp_client_send_message_U0_dataOut_V_data_V_din ),
    .dataOut_V_data_V_full_n( dhcp_client_send_message_U0_dataOut_V_data_V_full_n ),
    .dataOut_V_data_V_write( dhcp_client_send_message_U0_dataOut_V_data_V_write ),
    .dataOut_V_keep_V_din( dhcp_client_send_message_U0_dataOut_V_keep_V_din ),
    .dataOut_V_keep_V_full_n( dhcp_client_send_message_U0_dataOut_V_keep_V_full_n ),
    .dataOut_V_keep_V_write( dhcp_client_send_message_U0_dataOut_V_keep_V_write ),
    .dataOut_V_last_V_din( dhcp_client_send_message_U0_dataOut_V_last_V_din ),
    .dataOut_V_last_V_full_n( dhcp_client_send_message_U0_dataOut_V_last_V_full_n ),
    .dataOut_V_last_V_write( dhcp_client_send_message_U0_dataOut_V_last_V_write ),
    .myMacAddress_V( dhcp_client_send_message_U0_myMacAddress_V )
);

FIFO_dhcp_client_portOpen_V_V portOpen_V_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( portOpen_V_V_U_ap_dummy_ce ),
    .if_write_ce( portOpen_V_V_U_ap_dummy_ce ),
    .if_din( portOpen_V_V_din ),
    .if_full_n( portOpen_V_V_full_n ),
    .if_write( portOpen_V_V_write ),
    .if_dout( portOpen_V_V_dout ),
    .if_empty_n( portOpen_V_V_empty_n ),
    .if_read( portOpen_V_V_read )
);

FIFO_dhcp_client_dhcp_replyMetaFifo_V dhcp_replyMetaFifo_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dhcp_replyMetaFifo_V_U_ap_dummy_ce ),
    .if_write_ce( dhcp_replyMetaFifo_V_U_ap_dummy_ce ),
    .if_din( dhcp_replyMetaFifo_V_din ),
    .if_full_n( dhcp_replyMetaFifo_V_full_n ),
    .if_write( dhcp_replyMetaFifo_V_write ),
    .if_dout( dhcp_replyMetaFifo_V_dout ),
    .if_empty_n( dhcp_replyMetaFifo_V_empty_n ),
    .if_read( dhcp_replyMetaFifo_V_read )
);

FIFO_dhcp_client_dhcp_requestMetaFifo_V dhcp_requestMetaFifo_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dhcp_requestMetaFifo_V_U_ap_dummy_ce ),
    .if_write_ce( dhcp_requestMetaFifo_V_U_ap_dummy_ce ),
    .if_din( dhcp_requestMetaFifo_V_din ),
    .if_full_n( dhcp_requestMetaFifo_V_full_n ),
    .if_write( dhcp_requestMetaFifo_V_write ),
    .if_dout( dhcp_requestMetaFifo_V_dout ),
    .if_empty_n( dhcp_requestMetaFifo_V_empty_n ),
    .if_read( dhcp_requestMetaFifo_V_read )
);



/// ap_reg_procdone_dhcp_client_dhcp_fsm_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_dhcp_client_dhcp_fsm_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_dhcp_client_dhcp_fsm_U0 <= ap_const_logic_0;
    end else begin
    end
end

/// ap_reg_procdone_dhcp_client_open_dhcp_port_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_dhcp_client_open_dhcp_port_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_dhcp_client_open_dhcp_port_U0 <= ap_const_logic_0;
    end else begin
    end
end

/// ap_reg_procdone_dhcp_client_send_message_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_dhcp_client_send_message_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_dhcp_client_send_message_U0 <= ap_const_logic_0;
    end else begin
    end
end

/// dhcp_client_dhcp_fsm_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_dhcp_client_dhcp_fsm_U0_ap_start
    if (ap_rst == 1'b1) begin
        dhcp_client_dhcp_fsm_U0_ap_start <= ap_const_logic_0;
    end else begin
        dhcp_client_dhcp_fsm_U0_ap_start <= ap_const_logic_1;
    end
end

/// dhcp_client_open_dhcp_port_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_dhcp_client_open_dhcp_port_U0_ap_start
    if (ap_rst == 1'b1) begin
        dhcp_client_open_dhcp_port_U0_ap_start <= ap_const_logic_0;
    end else begin
        dhcp_client_open_dhcp_port_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_sig_hs_done assign process. ///
always @ (ap_reg_procdone_dhcp_client_open_dhcp_port_U0 or ap_reg_procdone_dhcp_client_dhcp_fsm_U0 or ap_reg_procdone_dhcp_client_send_message_U0)
begin
    if (((ap_const_logic_1 == ap_reg_procdone_dhcp_client_open_dhcp_port_U0) & (ap_const_logic_1 == ap_reg_procdone_dhcp_client_dhcp_fsm_U0) & (ap_const_logic_1 == ap_reg_procdone_dhcp_client_send_message_U0))) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end
assign ap_sig_hs_continue = ap_const_logic_0;
assign confirmPortStatus_V_read = dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_read;
assign dataInMeta_V_read = dhcp_client_receive_message_U0_dataInMeta_V_read;
assign dataIn_V_data_V_read = dhcp_client_receive_message_U0_dataIn_V_data_V_read;
assign dataIn_V_keep_V_read = dhcp_client_receive_message_U0_dataIn_V_keep_V_read;
assign dataIn_V_last_V_read = dhcp_client_receive_message_U0_dataIn_V_last_V_read;
assign dataOutLength_V_V_din = dhcp_client_send_message_U0_dataOutLength_V_V_din;
assign dataOutLength_V_V_write = dhcp_client_send_message_U0_dataOutLength_V_V_write;
assign dataOutMeta_V_din = dhcp_client_send_message_U0_dataOutMeta_V_din;
assign dataOutMeta_V_write = dhcp_client_send_message_U0_dataOutMeta_V_write;
assign dataOut_V_data_V_din = dhcp_client_send_message_U0_dataOut_V_data_V_din;
assign dataOut_V_data_V_write = dhcp_client_send_message_U0_dataOut_V_data_V_write;
assign dataOut_V_keep_V_din = dhcp_client_send_message_U0_dataOut_V_keep_V_din;
assign dataOut_V_keep_V_write = dhcp_client_send_message_U0_dataOut_V_keep_V_write;
assign dataOut_V_last_V_din = dhcp_client_send_message_U0_dataOut_V_last_V_din;
assign dataOut_V_last_V_write = dhcp_client_send_message_U0_dataOut_V_last_V_write;
assign dhcpIpAddressOut_V = dhcp_client_dhcp_fsm_U0_ipAddressOut_V;
assign dhcpIpAddressOut_V_ap_vld = dhcp_client_dhcp_fsm_U0_ipAddressOut_V_ap_vld;
assign dhcp_client_dhcp_fsm_U0_ap_continue = ap_const_logic_1;
assign dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_dout = dhcp_replyMetaFifo_V_dout;
assign dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_empty_n = dhcp_replyMetaFifo_V_empty_n;
assign dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_full_n = dhcp_requestMetaFifo_V_full_n;
assign dhcp_client_dhcp_fsm_U0_portOpen_V_V_dout = portOpen_V_V_dout;
assign dhcp_client_dhcp_fsm_U0_portOpen_V_V_empty_n = portOpen_V_V_empty_n;
assign dhcp_client_open_dhcp_port_U0_ap_continue = ap_const_logic_1;
assign dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_dout = confirmPortStatus_V_dout;
assign dhcp_client_open_dhcp_port_U0_confirmPortStatus_V_empty_n = confirmPortStatus_V_empty_n;
assign dhcp_client_open_dhcp_port_U0_openPort_V_V_full_n = openPort_V_V_full_n;
assign dhcp_client_open_dhcp_port_U0_portOpen_V_V_full_n = portOpen_V_V_full_n;
assign dhcp_client_receive_message_U0_ap_continue = ap_const_logic_1;
assign dhcp_client_receive_message_U0_ap_start = ap_const_logic_1;
assign dhcp_client_receive_message_U0_dataInMeta_V_dout = dataInMeta_V_dout;
assign dhcp_client_receive_message_U0_dataInMeta_V_empty_n = dataInMeta_V_empty_n;
assign dhcp_client_receive_message_U0_dataIn_V_data_V_dout = dataIn_V_data_V_dout;
assign dhcp_client_receive_message_U0_dataIn_V_data_V_empty_n = dataIn_V_data_V_empty_n;
assign dhcp_client_receive_message_U0_dataIn_V_keep_V_dout = dataIn_V_keep_V_dout;
assign dhcp_client_receive_message_U0_dataIn_V_keep_V_empty_n = dataIn_V_keep_V_empty_n;
assign dhcp_client_receive_message_U0_dataIn_V_last_V_dout = dataIn_V_last_V_dout;
assign dhcp_client_receive_message_U0_dataIn_V_last_V_empty_n = dataIn_V_last_V_empty_n;
assign dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_full_n = dhcp_replyMetaFifo_V_full_n;
assign dhcp_client_receive_message_U0_myMacAddress_V = myMacAddress_V;
assign dhcp_client_send_message_U0_ap_continue = ap_const_logic_1;
assign dhcp_client_send_message_U0_ap_start = ap_const_logic_1;
assign dhcp_client_send_message_U0_dataOutLength_V_V_full_n = dataOutLength_V_V_full_n;
assign dhcp_client_send_message_U0_dataOutMeta_V_full_n = dataOutMeta_V_full_n;
assign dhcp_client_send_message_U0_dataOut_V_data_V_full_n = dataOut_V_data_V_full_n;
assign dhcp_client_send_message_U0_dataOut_V_keep_V_full_n = dataOut_V_keep_V_full_n;
assign dhcp_client_send_message_U0_dataOut_V_last_V_full_n = dataOut_V_last_V_full_n;
assign dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_dout = dhcp_requestMetaFifo_V_dout;
assign dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_empty_n = dhcp_requestMetaFifo_V_empty_n;
assign dhcp_client_send_message_U0_myMacAddress_V = myMacAddress_V;
assign dhcp_replyMetaFifo_V_U_ap_dummy_ce = ap_const_logic_1;
assign dhcp_replyMetaFifo_V_din = dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_din;
assign dhcp_replyMetaFifo_V_read = dhcp_client_dhcp_fsm_U0_dhcp_replyMetaFifo_V_read;
assign dhcp_replyMetaFifo_V_write = dhcp_client_receive_message_U0_dhcp_replyMetaFifo_V_write;
assign dhcp_requestMetaFifo_V_U_ap_dummy_ce = ap_const_logic_1;
assign dhcp_requestMetaFifo_V_din = dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_din;
assign dhcp_requestMetaFifo_V_read = dhcp_client_send_message_U0_dhcp_requestMetaFifo_V_read;
assign dhcp_requestMetaFifo_V_write = dhcp_client_dhcp_fsm_U0_dhcp_requestMetaFifo_V_write;
assign openPort_V_V_din = dhcp_client_open_dhcp_port_U0_openPort_V_V_din;
assign openPort_V_V_write = dhcp_client_open_dhcp_port_U0_openPort_V_V_write;
assign portOpen_V_V_U_ap_dummy_ce = ap_const_logic_1;
assign portOpen_V_V_din = dhcp_client_open_dhcp_port_U0_portOpen_V_V_din;
assign portOpen_V_V_read = dhcp_client_dhcp_fsm_U0_portOpen_V_V_read;
assign portOpen_V_V_write = dhcp_client_open_dhcp_port_U0_portOpen_V_V_write;


endmodule //dhcp_client

