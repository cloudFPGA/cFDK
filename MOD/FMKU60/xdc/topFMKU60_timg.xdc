# ******************************************************************************
# * Copyright 2016 -- 2020 IBM Corporation
# *
# * Licensed under the Apache License, Version 2.0 (the "License");
# * you may not use this file except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *     http://www.apache.org/licenses/LICENSE-2.0
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# ******************************************************************************

# ******************************************************************************
# *
# *                                cloudFPGA
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Default timing constraint file for the FMKU2595 equipped with a
# *           XCKU060.
# * File    : top_FMKU60_Flash_timg.
# *
# * Created : Sep. 2017
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, v2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the default timing constraints for
# *     operating a XCKU060 on a FMKU2595 module. The constraints are grouped by
# *      external device and connector entity names:
# *       - the synchronous dynamic random access memory (SDRM)
# *       - the programmable system on chip controller (PSOC)
# *       - the configuration Flash memory (FLASH)
# *       - the clock tree generator (CLKT)
# *       - the edge backplane connector (ECON)
# *       - the top extension connector (XCON)
# *
# *     The SDRM has the following interfaces:
# *       - a memory channel 0 (SDRM_Mch0)
# *       - a memory channel 1 (SDRM_Mch1)
# *     The PSOC has the following interfaces:
# *       - an External memory interface (PSOC_Emif)
# *       - an Fpga configuration interface (PSOC_Fcfg)
# *     The FLASH has the following interfaces:
# *       - a byte peripheral interface (FLASH_Bpi)
# *     The CLKT has the following interfaces:
# *       -
# *     The ECON has the following interfaces:
# *     The XCON has the following interfaces:
# *
# *
# *-----------------------------------------------------------------------------
# * Constraints Methodology and Recommendations (according to Xilinx UG903)
# *   - Xilinx recommends to separate timing constraints and physical constraints
# *     by saving them into two distinct files.
# *   - Organize your constraints in the following sequence.
# *     [1] Timing Assertions Section
# *       - Primary clocks
# *       -  Virtual clocks
# *       -  Generated clocks
# *       -  Clock Groups
# *       -  Bus Skew constraints
# *       -  InpOBSOut and output delay constraints
# *     [2] Timing Exceptions Section
# *       -  False Paths
# *       -  Max Delay / Min Delay
# *       -  Multicycle Paths
# *       -  Case Analysis
# *       -  Disable Timing
# *     [3] Physical Constraints Section
# *       -  located anywhere in the file, preferably before or after the timing constraints
# *       -  or stored in a separate constraint file
# *
# ******************************************************************************


################################################################################
#                                                                              #
#  WARNING: This file makes use of constants which are defined in a TCL file.  #
#           Please see the local file: 'xdc_settings.tcl'.                     #
#                                                                              #
################################################################################

#===============================================================================
# Create the Primary Root Clocks as generated by the Clock Tree (CLKT)
#===============================================================================

# CLKT / Reference clock for GTH transceivers of the 10GE Interface
#  [INFO] This clock is already constrained by the IP core.
#  create_clock -name piCLKT_10GeClk -period 6.400 [get_ports piCLKT_10GeClk_p]

# CLKT / Reference clock for the User clock #0
create_clock -name piCLKT_Usr0Clk -period 6.400 [get_ports piCLKT_Usr0Clk_p]

# CLKT / Reference clock for the User clock #1
create_clock -name piCLKT_Usr1Clk -period 4.000 [get_ports piCLKT_Usr1Clk_p]

# CLKT / Reference clock for the DRAM block 0
#  [INFO] This clock is already constrained by the IP core.
# create_clock -name piCLKT_Mem0Clk -period 3.333 [get_ports piCLKT_Mem0Clk_p]

# CLKT / Reference clock for the DRAM block 1
#  [INFO] This clock is already constrained by the IP core.
# create_clock -name piCLKT_Mem1Clk -period 3.333 [get_ports piCLKT_Mem1Clk_p]

#===============================================================================
# Create the Primary Root Clock as generated by the EMIF bus I/F of the PSOC
#===============================================================================
create_clock -period 166.667 -name piPSOC_Emif_Clk -waveform {62.500 83.333} [get_ports piPSOC_Emif_Clk]

#===============================================================================
# Renaming Internaly Generated Clocks to Ease the Constraint Process 
#===============================================================================
create_generated_clock -name SHELL_CLK -source [get_pins SHELL/SuperCfg.ETH0/ETH/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/I] -master_clock [get_clocks txoutclk_out[0]] [get_pins SHELL/SuperCfg.ETH0/ETH/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O]
create_generated_clock -name MEMC0_CLK -source [get_pins SHELL/MEM/MC0/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst/CLKOUT0]
create_generated_clock -name MEMC1_CLK -source [get_pins SHELL/MEM/MC1/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst/CLKOU

#===============================================================================
# Create the Group Constraints among Primary Clocks
#===============================================================================
set_clock_groups -asynchronous -group { SHELL_CLK }        -group { piCLKT_Usr0Clk  }
# set_clock_groups -asynchronous -group { piCLKT_10GeClk } -group { piCLKT_Usr1Clk  }
# set_clock_groups -asynchronous -group { piCLKT_10GeClk } -group { piCLKT_Mem0Clk  }
# set_clock_groups -asynchronous -group { piCLKT_10GeClk } -group { piCLKT_Mem1Clk  }
# set_clock_groups -asynchronous -group { piCLKT_10GeClk } -group { piPSOC_Emif_Clk }

set_clock_groups -asynchronous -group { piCLKT_Usr0Clk } -group { piCLKT_Usr1Clk  }
set_clock_groups -asynchronous -group { piCLKT_Usr0Clk } -group { piCLKT_Mem0Clk  }
set_clock_groups -asynchronous -group { piCLKT_Usr0Clk } -group { piCLKT_Mem1Clk  }
set_clock_groups -asynchronous -group { piCLKT_Usr0Clk } -group { piPSOC_Emif_Clk }

set_clock_groups -asynchronous -group { piCLKT_Usr1Clk } -group { piCLKT_Mem0Clk  }
set_clock_groups -asynchronous -group { piCLKT_Usr1Clk } -group { piCLKT_Mem1Clk  }
set_clock_groups -asynchronous -group { piCLKT_Usr1Clk } -group { piPSOC_Emif_Clk }

set_clock_groups -asynchronous -group { piCLKT_Mem0Clk } -group { piCLKT_Mem1Clk  }
set_clock_groups -asynchronous -group { piCLKT_Mem0Clk } -group { piPSOC_Emif_Clk }

set_clock_groups -asynchronous -group { piCLKT_Mem1Clk } -group { piPSOC_Emif_Clk }

#===============================================================================
# Create the Group Constraints among Generated Clocks
#===============================================================================
# set_clock_groups -asynchronous -group { piPSOC_Emif_Clk } -group { SHELL_CLK } 
# set_clock_groups -asynchronous -group { piCLKT_10GeClk  } -group { SHELL_CLK }
set_clock_groups -asynchronous -group { piPSOC_Emif_Clk } -group [get_clocks -of_objects [get_pins SHELL/SuperCfg.ETH0/ETH/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O]]
# set_clock_groups -asynchronous -group { piCLKT_10GeClk  } -group [get_clocks -of_objects [get_pins SHELL/SuperCfg.ETH0/ETH/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O]]

#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #0 / Reset
#=====================================================================
# set_output_delay -clock [get_clocks -of_objects [get_pins SHELL/MEM/MC0/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst/CLKOUT0]] 1.0 [get_ports *poDDR4_Mem_Mc0_Reset_n*]
set_output_delay -clock [MEMC0_CLK] 1.0 [get_ports *poDDR4_Mem_Mc0_Reset_n*]

#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #1 / Reset
#=====================================================================
# set_output_delay -clock [get_clocks -of_objects [get_pins SHELL/MEM/MC1/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst/CLKOUT0]] 1.0 [get_ports *poDDR4_Mem_Mc1_Reset_n*]
set_output_delay -clock [MEMC1_CLK] 1.0 [get_ports *poDDR4_Mem_Mc1_Reset_n*]

#---------------------------------------------------------------------
# PSOC / External Memory Interface (see PSoC Creator Component v1.30)
#---------------------------------------------------------------------
#
#             +---+   +---+   +---+   +---+   +---+   +---+   +---+
# Bus Clock   |   |   |   |   |   |   |   |   |   |   |   |   |   |
#          ---+   +---+   +---+   +---+   +---+   +---+   +---+   +---
#
#                         +---+                           +---+
# EMIF Clk                |   |                           |   |
#          ---------------+   +---------------------------+   +-------
#
#              +-----------------------------+ +----------------------
# EMIF Addr --X                               X
#              +-----------------------------+ +----------------------
#
#          ----------+        +-----------------------+        +------
# EMIF CTtl          |        |                       |        |
#                    +--------+                       +--------+
#
#----------------------------------------------------------------------

# PSoC / Emif - Address[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  20.833 [get_ports {piPSOC_Emif_Addr[*]}]
set_input_delay -clock piPSOC_Emif_Clk -min  52.083 [get_ports {piPSOC_Emif_Addr[*]}]

# PSOC / Emif - Chip select - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  20.833 [get_ports piPSOC_Emif_Cs_n]
set_input_delay -clock piPSOC_Emif_Clk -min  20.833 [get_ports piPSOC_Emif_Cs_n]

# PSoC / Emif - Address Strobe - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  20.833 [get_ports piPSOC_Emif_AdS_n]
set_input_delay -clock piPSOC_Emif_Clk -min  20.833 [get_ports piPSOC_Emif_AdS_n]

# PSOC / Emif - Write enable - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  20.833 [get_ports piPSOC_Emif_We_n]
set_input_delay -clock piPSOC_Emif_Clk -min  20.833 [get_ports piPSOC_Emif_We_n]

# PSoC / Emif - Output enable - Read setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  20.833 [get_ports piPSOC_Emif_Oe_n]
set_input_delay -clock piPSOC_Emif_Clk -min  31.250 [get_ports piPSOC_Emif_Oe_n]

# PSoC / Emif - Data[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max  31.667 [get_ports {pioPSOC_Emif_Data[*]}]
set_input_delay -clock piPSOC_Emif_Clk -min  52.083 [get_ports {pioPSOC_Emif_Data[*]}]

# PSoC / Emif - Data[7:0] - Read setup and hold times
set_output_delay -clock piPSOC_Emif_Clk -max 57.500 [get_ports {pioPSOC_Emif_Data[*]}]
set_output_delay -clock piPSOC_Emif_Clk -min 67.500 [get_ports {pioPSOC_Emif_Data[*]}]

# PSOC / Fcfg - Asynchronous Reset Input
set_false_path -through [get_nets piPSOC_Fcfg_Rst_n]

#=====================================================================
# Constraints related to the Heart Beat LED
#=====================================================================
set_output_delay -clock [get_clocks *SHELL_CLK*] 0.0 [get_ports *poLED_HeartBeat*]


#=====================================================================
# DEBUG_HUB Constraints added by the Timing Constraint Wizard
#=====================================================================
