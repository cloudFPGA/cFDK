
####################################################################################
# Generated by Vivado 2017.4 built on 'Fri Dec 15 20:54:30 MST 2017' by 'xbuild'
# Command Used: write_xdc ./xdc/pr.xdc
####################################################################################


####################################################################################
# Constraints from file : 'dhcp_client.xdc'
####################################################################################

current_instance SHELL_INST/NTS0/DHCP/inst
set_false_path -through [get_ports -scoped_to_current_instance {myMacAddress_V[*]}]


####################################################################################
# Constraints from file : 'bd_af34_microblaze_I_0.xdc'
####################################################################################

current_instance -quiet
current_instance SHELL_INST/MEM/MC0/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/microblaze_I/U0
set_false_path -through [get_ports -scoped_to_current_instance Reset]
current_instance -quiet
current_instance SHELL_INST/MEM/MC0/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/microblaze_I/U0
set_ip_msg_config -idlist {DPIP-1 DPOP-1 DPOP-2 PDCN-1569}
current_instance -quiet

current_instance SHELL_INST/MEM/MC1/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/microblaze_I/U0
set_false_path -through [get_ports -scoped_to_current_instance Reset]
current_instance -quiet
current_instance SHELL_INST/MEM/MC1/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/microblaze_I/U0
set_ip_msg_config -idlist {DPIP-1 DPOP-1 DPOP-2 PDCN-1569}
current_instance -quiet


####################################################################################
# Constraints from file : 'bd_af34_rst_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'bd_af34_rst_0_0.xdc'
####################################################################################


# file: bd_af34_rst_0_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance SHELL_INST/MEM/MC0/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/rst_0/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


# file: bd_af34_rst_0_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance SHELL_INST/MEM/MC1/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/rst_0/U0
set_false_path -to [get_pins -hier *cdc_to*/D]


####################################################################################
# Constraints from file : 'bd_af34_ilmb_0.xdc'
####################################################################################

current_instance -quiet
current_instance SHELL_INST/MEM/MC0/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/ilmb/U0
set_false_path -through [get_ports -scoped_to_current_instance SYS_Rst]

current_instance -quiet
current_instance SHELL_INST/MEM/MC1/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/ilmb/U0
set_false_path -through [get_ports -scoped_to_current_instance SYS_Rst]


####################################################################################
# Constraints from file : 'bd_af34_dlmb_0.xdc'
####################################################################################

current_instance -quiet
current_instance SHELL_INST/MEM/MC0/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/dlmb/U0
set_false_path -through [get_ports -scoped_to_current_instance SYS_Rst]

current_instance -quiet
current_instance SHELL_INST/MEM/MC1/MCC/inst/u_ddr4_mem_intfc/u_ddr_cal_riu/mcs0/U0/dlmb/U0
set_false_path -through [get_ports -scoped_to_current_instance SYS_Rst]


####################################################################################
# Constraints from file : 'bd_af34_iomodule_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'MemoryChannelController_microblaze_mcs_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'MemoryChannelController_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------


#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'MemoryChannelController.xdc'
####################################################################################

## please copy over all contents of the XDC when it is merged with othe XDC files ##

## Clock constraint for input system clock which drives MMCM for the design

## The frequency of the input clock is as per GUI selected input clock period

current_instance -quiet
create_clock -period 3.332 [get_ports piCLKT_Mem0Clk_p]


## Below pin LOC constraints are for system clock and system reset and

## memory related pins








## This signal is static signals. Once asserted it will stay HIGH.

## The multi cycle path constraint is added to improve the timing.

current_instance SHELL_INST/MEM/MC0/MCC/inst
set_multicycle_path -setup -from [get_pins */u_ddr_cal_top/calDone*/C] 8
set_multicycle_path -hold -end -from [get_pins */u_ddr_cal_top/calDone*/C] 7


## These signals once asserted, stays asserted for multiple clock cycles.

## False path constraint is added to improve the HOLD timing.

set_false_path -hold -to [get_pins */*/*/*/*/*.u_xiphy_control/xiphy_control/RIU_ADDR*]
set_false_path -hold -to [get_pins */*/*/*/*/*.u_xiphy_control/xiphy_control/RIU_WR_DATA*]


current_instance -quiet
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Act_n]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[1]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[2]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[3]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[4]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[5]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[6]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[7]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[8]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[9]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[10]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[11]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[12]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[13]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[14]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[15]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Adr[16]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Ba[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Ba[1]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Bg[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Bg[1]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Ck_n]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Ck_p]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Cke]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Odt]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc0_Act_n]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[1]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[2]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[3]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[4]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[5]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[6]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[7]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[8]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[9]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[10]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[11]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[12]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[13]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[14]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[15]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Adr[16]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Ba[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Ba[1]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Bg[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Bg[1]}]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc0_Cke]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc0_Odt]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property DATA_RATE DDR [get_ports poTOP_Ddr4_Mc0_Ck_n]
set_property DATA_RATE DDR [get_ports poTOP_Ddr4_Mc0_Ck_p]
## Multi-cycle path constraints for Fabric - RIU clock domain crossing signals
current_instance SHELL_INST/MEM/MC0/MCC/inst
set_max_delay -datapath_only -from [get_pins */*/*/u_ddr_cal_addr_decode/io_ready_lvl_reg/C] -to [get_pins {*/u_io_ready_lvl_sync/SYNC[*].sync_reg_reg[0]/D}] 5.000
set_max_delay -datapath_only -from [get_pins {*/*/*/u_ddr_cal_addr_decode/io_read_data_reg[*]/C}] -to [get_pins {*/u_io_read_data_sync/SYNC[*].sync_reg_reg[0]/D}] 5.000
set_max_delay -datapath_only -from [get_pins */*/*/phy_ready_riuclk_reg/C] -to [get_pins {*/u_phy2clb_phy_ready_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/bisc_complete_riuclk_reg/C] -to [get_pins {*/u_phy2clb_bisc_complete_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/io_addr_strobe_lvl_riuclk_reg/C] -to [get_pins {*/u_io_addr_strobe_lvl_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/io_write_strobe_riuclk_reg/C] -to [get_pins {*/u_io_write_strobe_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/io_address_riuclk_reg[*]/C}] -to [get_pins {*/u_io_addr_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/io_write_data_riuclk_reg[*]/C}] -to [get_pins {*/u_io_write_data_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */en_vtc_in_reg/C] -to [get_pins {*/u_en_vtc_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/riu2clb_valid_r1_riuclk_reg[*]/C}] -to [get_pins {*/u_riu2clb_valid_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_fixdly_rdy_low_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_fixdly_rdy_low/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_fixdly_rdy_upp_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_fixdly_rdy_upp/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_phy_rdy_low_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_phy_rdy_low/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_phy_rdy_upp_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_phy_rdy_upp/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins */rst_r1_reg/C] -to [get_pins {*/u_fab_rst_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins */*/*/clb2phy_t_b_addr_riuclk_reg/C] -to [get_pins {*/*/*/clb2phy_t_b_addr_i_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_en_lvl_reg/C] -to [get_pins {*/*/*/*/u_slave_en_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_we_r_reg/C] -to [get_pins {*/*/*/*/u_slave_we_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_addr_r_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_addr_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_di_r_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_di_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_rdy_cptd_sclk_reg/C] -to [get_pins {*/*/*/*/u_slave_rdy_cptd_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_rdy_lvl_fclk_reg/C] -to [get_pins {*/*/*/*/u_slave_rdy_sync/SYNC[*].sync_reg_reg[0]/D}] 12.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_do_fclk_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_do_sync/SYNC[*].sync_reg_reg[0]/D}] 12.000
set_false_path -through [get_pins u_ddr4_infrastructure/sys_rst]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_div_sync_r_reg[0]/D}]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_riu_sync_r_reg[0]/D}]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_mb_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_riu_div_reg/C] -to [get_pins {*/rst_div_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_mb_reg/C] -to [get_pins {*/rst_mb_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_riu_div_reg/C] -to [get_pins {*/rst_riu_sync_r_reg[0]/D}]
## These below commands are used to create Interface ports for controller.

current_instance -quiet
create_interface interface_MemoryChannelController
set_property INTERFACE interface_MemoryChannelController [get_ports { pioDDR_Top_Mc0_Dq[71] pioDDR_Top_Mc0_Dq[70] pioDDR_Top_Mc0_Dq[69] pioDDR_Top_Mc0_Dq[68] pioDDR_Top_Mc0_Dq[67] pioDDR_Top_Mc0_Dq[66] pioDDR_Top_Mc0_Dq[65] pioDDR_Top_Mc0_Dq[64] pioDDR_Top_Mc0_Dq[63] pioDDR_Top_Mc0_Dq[62] pioDDR_Top_Mc0_Dq[61] pioDDR_Top_Mc0_Dq[60] pioDDR_Top_Mc0_Dq[59] pioDDR_Top_Mc0_Dq[58] pioDDR_Top_Mc0_Dq[57] pioDDR_Top_Mc0_Dq[56] pioDDR_Top_Mc0_Dq[55] pioDDR_Top_Mc0_Dq[54] pioDDR_Top_Mc0_Dq[53] pioDDR_Top_Mc0_Dq[52] pioDDR_Top_Mc0_Dq[51] pioDDR_Top_Mc0_Dq[50] pioDDR_Top_Mc0_Dq[49] pioDDR_Top_Mc0_Dq[48] pioDDR_Top_Mc0_Dq[47] pioDDR_Top_Mc0_Dq[46] pioDDR_Top_Mc0_Dq[45] pioDDR_Top_Mc0_Dq[44] pioDDR_Top_Mc0_Dq[43] pioDDR_Top_Mc0_Dq[42] pioDDR_Top_Mc0_Dq[41] pioDDR_Top_Mc0_Dq[40] pioDDR_Top_Mc0_Dq[39] pioDDR_Top_Mc0_Dq[38] pioDDR_Top_Mc0_Dq[37] pioDDR_Top_Mc0_Dq[36] pioDDR_Top_Mc0_Dq[35] pioDDR_Top_Mc0_Dq[34] pioDDR_Top_Mc0_Dq[33] pioDDR_Top_Mc0_Dq[32] pioDDR_Top_Mc0_Dq[31] pioDDR_Top_Mc0_Dq[30] pioDDR_Top_Mc0_Dq[29] pioDDR_Top_Mc0_Dq[28] pioDDR_Top_Mc0_Dq[27] pioDDR_Top_Mc0_Dq[26] pioDDR_Top_Mc0_Dq[25] pioDDR_Top_Mc0_Dq[24] pioDDR_Top_Mc0_Dq[23] pioDDR_Top_Mc0_Dq[22] pioDDR_Top_Mc0_Dq[21] pioDDR_Top_Mc0_Dq[20] pioDDR_Top_Mc0_Dq[19] pioDDR_Top_Mc0_Dq[18] pioDDR_Top_Mc0_Dq[17] pioDDR_Top_Mc0_Dq[16] pioDDR_Top_Mc0_Dq[15] pioDDR_Top_Mc0_Dq[14] pioDDR_Top_Mc0_Dq[13] pioDDR_Top_Mc0_Dq[12] pioDDR_Top_Mc0_Dq[11] pioDDR_Top_Mc0_Dq[10] pioDDR_Top_Mc0_Dq[9] pioDDR_Top_Mc0_Dq[8] pioDDR_Top_Mc0_Dq[7] pioDDR_Top_Mc0_Dq[6] pioDDR_Top_Mc0_Dq[5] pioDDR_Top_Mc0_Dq[4] pioDDR_Top_Mc0_Dq[3] pioDDR_Top_Mc0_Dq[2] pioDDR_Top_Mc0_Dq[1] pioDDR_Top_Mc0_Dq[0] pioDDR_Top_Mc0_DmDbi_n[8] pioDDR_Top_Mc0_DmDbi_n[7] pioDDR_Top_Mc0_DmDbi_n[6] pioDDR_Top_Mc0_DmDbi_n[5] pioDDR_Top_Mc0_DmDbi_n[4] pioDDR_Top_Mc0_DmDbi_n[3] pioDDR_Top_Mc0_DmDbi_n[2] pioDDR_Top_Mc0_DmDbi_n[1] pioDDR_Top_Mc0_DmDbi_n[0] poTOP_Ddr4_Mc0_Adr[16] poTOP_Ddr4_Mc0_Adr[15] poTOP_Ddr4_Mc0_Adr[14] poTOP_Ddr4_Mc0_Adr[13] poTOP_Ddr4_Mc0_Adr[12] poTOP_Ddr4_Mc0_Adr[11] poTOP_Ddr4_Mc0_Adr[10] poTOP_Ddr4_Mc0_Adr[9] poTOP_Ddr4_Mc0_Adr[8] poTOP_Ddr4_Mc0_Adr[7] poTOP_Ddr4_Mc0_Adr[6] poTOP_Ddr4_Mc0_Adr[5] poTOP_Ddr4_Mc0_Adr[4] poTOP_Ddr4_Mc0_Adr[3] poTOP_Ddr4_Mc0_Adr[2] poTOP_Ddr4_Mc0_Adr[1] poTOP_Ddr4_Mc0_Adr[0] pioDDR_Top_Mc0_Dqs_n[8] pioDDR_Top_Mc0_Dqs_n[7] pioDDR_Top_Mc0_Dqs_n[6] pioDDR_Top_Mc0_Dqs_n[5] pioDDR_Top_Mc0_Dqs_n[4] pioDDR_Top_Mc0_Dqs_n[3] pioDDR_Top_Mc0_Dqs_n[2] pioDDR_Top_Mc0_Dqs_n[1] pioDDR_Top_Mc0_Dqs_n[0] pioDDR_Top_Mc0_Dqs_p[8] pioDDR_Top_Mc0_Dqs_p[7] pioDDR_Top_Mc0_Dqs_p[6] pioDDR_Top_Mc0_Dqs_p[5] pioDDR_Top_Mc0_Dqs_p[4] pioDDR_Top_Mc0_Dqs_p[3] pioDDR_Top_Mc0_Dqs_p[2] pioDDR_Top_Mc0_Dqs_p[1] pioDDR_Top_Mc0_Dqs_p[0] poTOP_Ddr4_Mc0_Bg[1] poTOP_Ddr4_Mc0_Bg[0] poTOP_Ddr4_Mc0_Ba[1] poTOP_Ddr4_Mc0_Ba[0] poTOP_Ddr4_Mc0_Ck_p poTOP_Ddr4_Mc0_Ck_n poTOP_Ddr4_Mc0_Cs_n piCLKT_Mem0Clk_p piCLKT_Mem0Clk_n poTOP_Ddr4_Mc0_Cke poTOP_Ddr4_Mc0_Odt poTOP_Ddr4_Mc0_Act_n poTOP_Ddr4_Mc0_Reset_n }]

## please copy over all contents of the XDC when it is merged with othe XDC files ##

## Clock constraint for input system clock which drives MMCM for the design

## The frequency of the input clock is as per GUI selected input clock period

create_clock -period 3.332 [get_ports piCLKT_Mem1Clk_p]


## Below pin LOC constraints are for system clock and system reset and

## memory related pins








## This signal is static signals. Once asserted it will stay HIGH.

## The multi cycle path constraint is added to improve the timing.

current_instance SHELL_INST/MEM/MC1/MCC/inst
set_multicycle_path -setup -from [get_pins */u_ddr_cal_top/calDone*/C] 8
set_multicycle_path -hold -end -from [get_pins */u_ddr_cal_top/calDone*/C] 7


## These signals once asserted, stays asserted for multiple clock cycles.

## False path constraint is added to improve the HOLD timing.

set_false_path -hold -to [get_pins */*/*/*/*/*.u_xiphy_control/xiphy_control/RIU_ADDR*]
set_false_path -hold -to [get_pins */*/*/*/*/*.u_xiphy_control/xiphy_control/RIU_WR_DATA*]


current_instance -quiet
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Act_n]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[1]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[2]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[3]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[4]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[5]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[6]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[7]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[8]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[9]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[10]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[11]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[12]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[13]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[14]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[15]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Adr[16]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Ba[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Ba[1]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Bg[0]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Bg[1]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Ck_n]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Ck_p]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Cke]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Odt]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property SLEW FAST [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property IBUF_LOW_PWR FALSE [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property ODT RTT_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property EQUALIZATION EQ_LEVEL2 [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property PRE_EMPHASIS RDRV_240 [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc1_Act_n]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[1]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[2]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[3]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[4]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[5]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[6]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[7]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[8]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[9]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[10]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[11]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[12]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[13]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[14]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[15]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Adr[16]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Ba[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Ba[1]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Bg[0]}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Bg[1]}]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc1_Cke]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc1_Odt]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property DATA_RATE DDR [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property DATA_RATE DDR [get_ports poTOP_Ddr4_Mc1_Ck_n]
set_property DATA_RATE DDR [get_ports poTOP_Ddr4_Mc1_Ck_p]
## Multi-cycle path constraints for Fabric - RIU clock domain crossing signals
current_instance SHELL_INST/MEM/MC1/MCC/inst
set_max_delay -datapath_only -from [get_pins */*/*/u_ddr_cal_addr_decode/io_ready_lvl_reg/C] -to [get_pins {*/u_io_ready_lvl_sync/SYNC[*].sync_reg_reg[0]/D}] 5.000
set_max_delay -datapath_only -from [get_pins {*/*/*/u_ddr_cal_addr_decode/io_read_data_reg[*]/C}] -to [get_pins {*/u_io_read_data_sync/SYNC[*].sync_reg_reg[0]/D}] 5.000
set_max_delay -datapath_only -from [get_pins */*/*/phy_ready_riuclk_reg/C] -to [get_pins {*/u_phy2clb_phy_ready_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/bisc_complete_riuclk_reg/C] -to [get_pins {*/u_phy2clb_bisc_complete_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/io_addr_strobe_lvl_riuclk_reg/C] -to [get_pins {*/u_io_addr_strobe_lvl_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/io_write_strobe_riuclk_reg/C] -to [get_pins {*/u_io_write_strobe_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/io_address_riuclk_reg[*]/C}] -to [get_pins {*/u_io_addr_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/io_write_data_riuclk_reg[*]/C}] -to [get_pins {*/u_io_write_data_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */en_vtc_in_reg/C] -to [get_pins {*/u_en_vtc_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/riu2clb_valid_r1_riuclk_reg[*]/C}] -to [get_pins {*/u_riu2clb_valid_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_fixdly_rdy_low_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_fixdly_rdy_low/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_fixdly_rdy_upp_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_fixdly_rdy_upp/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_phy_rdy_low_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_phy_rdy_low/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins {*/*/*/phy2clb_phy_rdy_upp_riuclk_int_reg[*]/C}] -to [get_pins {*/u_phy2clb_phy_rdy_upp/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins */rst_r1_reg/C] -to [get_pins {*/u_fab_rst_sync/SYNC[*].sync_reg_reg[0]/D}] 10.000
set_max_delay -datapath_only -from [get_pins */*/*/clb2phy_t_b_addr_riuclk_reg/C] -to [get_pins {*/*/*/clb2phy_t_b_addr_i_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_en_lvl_reg/C] -to [get_pins {*/*/*/*/u_slave_en_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_we_r_reg/C] -to [get_pins {*/*/*/*/u_slave_we_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_addr_r_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_addr_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_di_r_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_di_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_rdy_cptd_sclk_reg/C] -to [get_pins {*/*/*/*/u_slave_rdy_cptd_sync/SYNC[*].sync_reg_reg[0]/D}] 3.000
set_max_delay -datapath_only -from [get_pins */*/*/*/slave_rdy_lvl_fclk_reg/C] -to [get_pins {*/*/*/*/u_slave_rdy_sync/SYNC[*].sync_reg_reg[0]/D}] 12.000
set_max_delay -datapath_only -from [get_pins {*/*/*/*/slave_do_fclk_reg[*]/C}] -to [get_pins {*/*/*/*/u_slave_do_sync/SYNC[*].sync_reg_reg[0]/D}] 12.000
set_false_path -through [get_pins u_ddr4_infrastructure/sys_rst]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_div_sync_r_reg[0]/D}]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_riu_sync_r_reg[0]/D}]
set_false_path -from [get_pins */input_rst_design_reg/C] -to [get_pins {*/rst_mb_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_riu_div_reg/C] -to [get_pins {*/rst_div_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_mb_reg/C] -to [get_pins {*/rst_mb_sync_r_reg[0]/D}]
set_false_path -from [get_pins */rst_async_riu_div_reg/C] -to [get_pins {*/rst_riu_sync_r_reg[0]/D}]
## These below commands are used to create Interface ports for controller.

current_instance -quiet
create_interface interface_MemoryChannelController_7392
set_property INTERFACE interface_MemoryChannelController_7392 [get_ports { pioDDR_Top_Mc1_Dq[71] pioDDR_Top_Mc1_Dq[70] pioDDR_Top_Mc1_Dq[69] pioDDR_Top_Mc1_Dq[68] pioDDR_Top_Mc1_Dq[67] pioDDR_Top_Mc1_Dq[66] pioDDR_Top_Mc1_Dq[65] pioDDR_Top_Mc1_Dq[64] pioDDR_Top_Mc1_Dq[63] pioDDR_Top_Mc1_Dq[62] pioDDR_Top_Mc1_Dq[61] pioDDR_Top_Mc1_Dq[60] pioDDR_Top_Mc1_Dq[59] pioDDR_Top_Mc1_Dq[58] pioDDR_Top_Mc1_Dq[57] pioDDR_Top_Mc1_Dq[56] pioDDR_Top_Mc1_Dq[55] pioDDR_Top_Mc1_Dq[54] pioDDR_Top_Mc1_Dq[53] pioDDR_Top_Mc1_Dq[52] pioDDR_Top_Mc1_Dq[51] pioDDR_Top_Mc1_Dq[50] pioDDR_Top_Mc1_Dq[49] pioDDR_Top_Mc1_Dq[48] pioDDR_Top_Mc1_Dq[47] pioDDR_Top_Mc1_Dq[46] pioDDR_Top_Mc1_Dq[45] pioDDR_Top_Mc1_Dq[44] pioDDR_Top_Mc1_Dq[43] pioDDR_Top_Mc1_Dq[42] pioDDR_Top_Mc1_Dq[41] pioDDR_Top_Mc1_Dq[40] pioDDR_Top_Mc1_Dq[39] pioDDR_Top_Mc1_Dq[38] pioDDR_Top_Mc1_Dq[37] pioDDR_Top_Mc1_Dq[36] pioDDR_Top_Mc1_Dq[35] pioDDR_Top_Mc1_Dq[34] pioDDR_Top_Mc1_Dq[33] pioDDR_Top_Mc1_Dq[32] pioDDR_Top_Mc1_Dq[31] pioDDR_Top_Mc1_Dq[30] pioDDR_Top_Mc1_Dq[29] pioDDR_Top_Mc1_Dq[28] pioDDR_Top_Mc1_Dq[27] pioDDR_Top_Mc1_Dq[26] pioDDR_Top_Mc1_Dq[25] pioDDR_Top_Mc1_Dq[24] pioDDR_Top_Mc1_Dq[23] pioDDR_Top_Mc1_Dq[22] pioDDR_Top_Mc1_Dq[21] pioDDR_Top_Mc1_Dq[20] pioDDR_Top_Mc1_Dq[19] pioDDR_Top_Mc1_Dq[18] pioDDR_Top_Mc1_Dq[17] pioDDR_Top_Mc1_Dq[16] pioDDR_Top_Mc1_Dq[15] pioDDR_Top_Mc1_Dq[14] pioDDR_Top_Mc1_Dq[13] pioDDR_Top_Mc1_Dq[12] pioDDR_Top_Mc1_Dq[11] pioDDR_Top_Mc1_Dq[10] pioDDR_Top_Mc1_Dq[9] pioDDR_Top_Mc1_Dq[8] pioDDR_Top_Mc1_Dq[7] pioDDR_Top_Mc1_Dq[6] pioDDR_Top_Mc1_Dq[5] pioDDR_Top_Mc1_Dq[4] pioDDR_Top_Mc1_Dq[3] pioDDR_Top_Mc1_Dq[2] pioDDR_Top_Mc1_Dq[1] pioDDR_Top_Mc1_Dq[0] pioDDR_Top_Mc1_DmDbi_n[8] pioDDR_Top_Mc1_DmDbi_n[7] pioDDR_Top_Mc1_DmDbi_n[6] pioDDR_Top_Mc1_DmDbi_n[5] pioDDR_Top_Mc1_DmDbi_n[4] pioDDR_Top_Mc1_DmDbi_n[3] pioDDR_Top_Mc1_DmDbi_n[2] pioDDR_Top_Mc1_DmDbi_n[1] pioDDR_Top_Mc1_DmDbi_n[0] poTOP_Ddr4_Mc1_Adr[16] poTOP_Ddr4_Mc1_Adr[15] poTOP_Ddr4_Mc1_Adr[14] poTOP_Ddr4_Mc1_Adr[13] poTOP_Ddr4_Mc1_Adr[12] poTOP_Ddr4_Mc1_Adr[11] poTOP_Ddr4_Mc1_Adr[10] poTOP_Ddr4_Mc1_Adr[9] poTOP_Ddr4_Mc1_Adr[8] poTOP_Ddr4_Mc1_Adr[7] poTOP_Ddr4_Mc1_Adr[6] poTOP_Ddr4_Mc1_Adr[5] poTOP_Ddr4_Mc1_Adr[4] poTOP_Ddr4_Mc1_Adr[3] poTOP_Ddr4_Mc1_Adr[2] poTOP_Ddr4_Mc1_Adr[1] poTOP_Ddr4_Mc1_Adr[0] pioDDR_Top_Mc1_Dqs_n[8] pioDDR_Top_Mc1_Dqs_n[7] pioDDR_Top_Mc1_Dqs_n[6] pioDDR_Top_Mc1_Dqs_n[5] pioDDR_Top_Mc1_Dqs_n[4] pioDDR_Top_Mc1_Dqs_n[3] pioDDR_Top_Mc1_Dqs_n[2] pioDDR_Top_Mc1_Dqs_n[1] pioDDR_Top_Mc1_Dqs_n[0] pioDDR_Top_Mc1_Dqs_p[8] pioDDR_Top_Mc1_Dqs_p[7] pioDDR_Top_Mc1_Dqs_p[6] pioDDR_Top_Mc1_Dqs_p[5] pioDDR_Top_Mc1_Dqs_p[4] pioDDR_Top_Mc1_Dqs_p[3] pioDDR_Top_Mc1_Dqs_p[2] pioDDR_Top_Mc1_Dqs_p[1] pioDDR_Top_Mc1_Dqs_p[0] poTOP_Ddr4_Mc1_Bg[1] poTOP_Ddr4_Mc1_Bg[0] poTOP_Ddr4_Mc1_Ba[1] poTOP_Ddr4_Mc1_Ba[0] poTOP_Ddr4_Mc1_Ck_p poTOP_Ddr4_Mc1_Ck_n poTOP_Ddr4_Mc1_Cs_n piCLKT_Mem1Clk_p piCLKT_Mem1Clk_n poTOP_Ddr4_Mc1_Cke poTOP_Ddr4_Mc1_Odt poTOP_Ddr4_Mc1_Act_n poTOP_Ddr4_Mc1_Reset_n }]


####################################################################################
# Constraints from file : 'iprx_handler.xdc'
####################################################################################

current_instance SHELL_INST/NTS0/IPRX/inst
set_false_path -through [get_ports -scoped_to_current_instance {myMacAddress_V[*]}]


####################################################################################
# Constraints from file : 'iptx_handler.xdc'
####################################################################################

current_instance -quiet
current_instance SHELL_INST/NTS0/IPTX/inst
set_false_path -through [get_ports -scoped_to_current_instance {myMacAddress_V[*]}]


####################################################################################
# Constraints from file : 'bd_b7e6_xmac_0.xdc'
####################################################################################

#######################################################
# Ten Gigabit Ethernet MAC core constraints           #
#######################################################

# ignore paths to reset syncs
current_instance -quiet
current_instance SHELL_INST/SuperCfg.ETH0/ETH0/CORE/IP/U0/xmac/U0
set_false_path -to [get_pins -filter {NAME =~ */PRE} -of_objects [get_cells bd_b7e6_xmac_0_core/reset_gen/sync_rx_rst/reset_async*_reg]]
set_false_path -to [get_pins -filter {NAME =~ */PRE} -of_objects [get_cells bd_b7e6_xmac_0_core/reset_gen/sync_tx_rst/reset_async*_reg]]

# Flow control clock domain crossings

set_max_delay -datapath_only -from [get_cells {bd_b7e6_xmac_0_core/rx/rx_pause_control/pause_quanta_reg[*]}] -to [get_cells {bd_b7e6_xmac_0_core/tx/tx_cntl/pause_tx_quanta_reg[*]}] 6.400



# Ignore paths to synchronisers
set_false_path -to [get_cells bd_b7e6_xmac_0_core/tx/tx_mux_final/rs_disable_s/data_sync0_reg]
set_false_path -to [get_cells bd_b7e6_xmac_0_core/tx/tx_mux_final/rs_local_fault_s/data_sync0_reg]
set_false_path -to [get_cells bd_b7e6_xmac_0_core/tx/tx_mux_final/rs_remote_fault_s/data_sync0_reg]
set_false_path -to [get_cells bd_b7e6_xmac_0_core/tx/tx_mux_final/rs_link_intr_fault_s/data_sync0_reg]
set_false_path -to [get_cells bd_b7e6_xmac_0_core/tx/tx_cntl/rx_to_tx_pause_req/data_sync0_reg]




####################################################################################
# Constraints from file : 'bd_b7e6_xpcs_0_gt.xdc'
####################################################################################

#------------------------------------------------------------------------------
#  (c) Copyright 2013-2015 Xilinx, Inc. All rights reserved.
#
#  This file contains confidential and proprietary information
#  of Xilinx, Inc. and is protected under U.S. and
#  international copyright and other intellectual property
#  laws.
#
#  DISCLAIMER
#  This disclaimer is not a license and does not grant any
#  rights to the materials distributed herewith. Except as
#  otherwise provided in a valid license issued to you by
#  Xilinx, and to the maximum extent permitted by applicable
#  law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#  WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#  AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#  BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#  INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#  (2) Xilinx shall not be liable (whether in contract or tort,
#  including negligence, or under any other theory of
#  liability) for any loss or damage of any kind or nature
#  related to, arising under or in connection with these
#  materials, including for any direct, or any indirect,
#  special, incidental, or consequential loss or damage
#  (including loss of data, profits, goodwill, or any type of
#  loss or damage suffered as a result of any action brought
#  by a third party) even if such damage or loss was
#  reasonably foreseeable or Xilinx had been advised of the
#  possibility of the same.
#
#  CRITICAL APPLICATIONS
#  Xilinx products are not designed or intended to be fail-
#  safe, or for use in any application requiring fail-safe
#  performance, such as life-support or safety devices or
#  systems, Class III medical devices, nuclear facilities,
#  applications related to the deployment of airbags, or any
#  other applications that could lead to death, personal
#  injury, or severe property or environmental damage
#  (individually and collectively, "Critical
#  Applications"). Customer assumes the sole risk and
#  liability of any use of Xilinx products in Critical
#  Applications, subject only to applicable laws and
#  regulations governing limitations on product liability.
#
#  THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#  PART OF THIS FILE AT ALL TIMES.
#------------------------------------------------------------------------------


# UltraScale FPGAs Transceivers Wizard IP core-level XDC file
# ----------------------------------------------------------------------------------------------------------------------

# Commands for enabled transceiver GTHE3_CHANNEL_X1Y8
# ----------------------------------------------------------------------------------------------------------------------

# Channel primitive location constraint
current_instance -quiet
current_instance SHELL_INST/SuperCfg.ETH0/ETH0/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_block_i/bd_b7e6_xpcs_0_gt_i/inst
set_property LOC GTHE3_CHANNEL_X1Y8 [get_cells -hierarchical -filter {NAME =~ *gen_channel_container[26].*gen_gthe3_channel_inst[0].GTHE3_CHANNEL_PRIM_INST}]

# Channel primitive serial data pin location constraints
# (Provided as comments for your reference. The channel primitive location constraint is sufficient.)
#set_property package_pin Y1 [get_ports gthrxn_in[0]]
#set_property package_pin Y2 [get_ports gthrxp_in[0]]
#set_property package_pin AA3 [get_ports gthtxn_out[0]]
#set_property package_pin AA4 [get_ports gthtxp_out[0]]


# False path constraints
# ----------------------------------------------------------------------------------------------------------------------

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *bit_synchronizer*inst/i_in_meta_reg}]

##set_false_path -to [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_*_reg}]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*D -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*PRE -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_meta*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync1*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync2*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_sync3*}]]
set_false_path -to [get_pins -filter REF_PIN_NAME=~*CLR -of_objects [get_cells -hierarchical -filter {NAME =~ *reset_synchronizer*inst/rst_in_out*}]]



####################################################################################
# Constraints from file : 'bd_b7e6_xpcs_0.xdc'
####################################################################################

## (c) Copyright 2009 - 2014 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
create_clock -period 6.400 [get_ports piCLKT_10GeClk_p]



# Set max delays between clock domain crossing data path regs in the rx elastic buffer
current_instance SHELL_INST/SuperCfg.ETH0/ETH0/CORE/IP/U0/xpcs/U0
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *elastic*rd_truegray_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] -to [get_cells -hierarchical -filter {NAME =~ *elastic*rag_writesync0_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] 6.400
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *elastic*wr_gray_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] -to [get_cells -hierarchical -filter {NAME =~ *elastic*wr_gray_rdclk0_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] 3.100
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *elastic*rd_lastgray_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] -to [get_cells -hierarchical -filter {NAME =~ *elastic*rd_lastgray_wrclk0_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] 6.400
set_false_path -from [get_pins -of [get_cells -of [all_fanin -flat [get_pins -of [get_cells -hier -filter {NAME =~ *asynch_fifo_i/dp_ram_i/rd_data_reg*}] -filter {NAME =~ *D}]] -filter {is_sequential == 1 && NAME =~ "*ten_gig_disti_ram*"}] -filter {NAME =~ *CLK}] -to [get_cells -hier -filter {NAME =~ *asynch_fifo_i/dp_ram_i/rd_data_reg*}]

# Set false paths and max delays between clock domain crossing reset regs
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *sync1_r_reg[0]}] -filter {NAME =~ *D}]
#set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *resyncs*d1_reg}] -filter {NAME =~ *D}]
#set_max_delay -datapath_only -from [get_cells -hier -filter {NAME =~ *pcs_reset_core_reg_reg}] -to [get_cells -hier -filter {NAME =~ *coreclk_rxusrclk2_resets_resyncs_i/d1_reg}] 3.100
set_max_delay -datapath_only -from [get_cells -of [all_fanin -flat [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *resyncs*d1_reg}] -filter {NAME =~ *D}]] -filter {IS_SEQUENTIAL=="1" && NAME !~ "*resyncs*d1_reg"}] -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *resyncs*d1_reg}] -filter {NAME =~ *D}] 3.100
set_false_path -from [get_cells -hierarchical -filter {(REF_NAME =~ "GT*E3_CHANNEL")}] -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *sync1_r_reg[0]}] -filter {NAME =~ *D}]
set_false_path -from [get_cells -hierarchical -filter {NAME =~ *cable_*pull_reset_reg}] -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *sync1_r_reg[0]}] -filter {NAME =~ *D}]
# False paths for async reset removal synchronizers
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *sync1_r_reg*}] -filter {NAME =~ *PRE}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *sync1_r_reg*}] -filter {NAME =~ *CLR}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *shared*sync1_r_reg*}] -filter {NAME =~ *PRE}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *shared*sync1_r_reg*}] -filter {NAME =~ *CLR}]
# False paths to the resetdone registers which merely tidy up combo logic on the way to synchronizers
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *gt0_rxresetdone_reg*}] -filter {NAME =~ *D}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *gt0_txresetdone_reg*}] -filter {NAME =~ *D}]

# Max delays to control skew into coherent synchronizers
#set_max_delay -datapath_only -from [get_clocks -of_objects [get_pins -hier -filter {NAME =~ *ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O}]] -to [get_pins -of_objects [get_cells -hier -filter {NAME =~ *coreclk_rxusrclk2_timer_125us_resync/*synchc_inst*d1_reg}] -filter {NAME =~ *D}] 3.200
#set_max_delay -datapath_only -from [get_clocks -of_objects [get_pins -hier -filter {NAME =~ *ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O}]] -to [get_pins -of_objects [get_cells -hier -filter {NAME =~ *coreclk_rxusrclk2_resyncs_i/*synchc_inst*d1_reg}] -filter {NAME =~ *D}] 3.200

# DRP clock crossing logic
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *drp_ipif_i*synch_*d_reg_reg* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}] -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *drp_ipif_i*synch_*q_reg*}] -filter {NAME =~ *D || NAME =~ *R || NAME =~ *S}] 3.100

set_false_path -to [get_cells -hierarchical -filter {NAME =~ *synch_*d1_reg}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *can_insert_synch*d1_reg}] -filter {NAME =~ *D}]
set_false_path -to [get_pins -of_objects [get_cells -hierarchical -filter {NAME =~ *psynch_*newedge_reg_reg}] -filter {NAME =~ *D}]



##################################################################
# Transceiver Placement
# Transceivers should be adjacent to allow timing constraints to be met easily.
# Full details of available transceiver locations can be found in the UltraScale documentation.
##################################################################
set_property LOC GTHE3_COMMON_X1Y2 [get_cells -hier -filter {NAME=~  *ten_gig_eth_pcs_pma_gt_common_block/*gthe3_common*}]
set_property LOC GTHE3_COMMON_X1Y2 [get_cells -hier -filter {NAME=~  *shared*ibufds_inst}]
##################################################################


####################################################################################
# Constraints from file : 'arp_server.xdc'
####################################################################################

current_instance -quiet
current_instance SHELL_INST/NTS0/ARP/ARS/inst
set_false_path -through [get_ports -scoped_to_current_instance {myMacAddress_V[*]}]


####################################################################################
# Constraints from file : 'AxiDataMover_M512_S512_B16.xdc'
####################################################################################

# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.



# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.




####################################################################################
# Constraints from file : 'AxiDataMover_M512_S64_B16.xdc'
####################################################################################

# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.



# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.




####################################################################################
# Constraints from file : 'topFMKU60_Flash.xdc'
####################################################################################

# ******************************************************************************
# *
# *                        Zurich cloudFPGA
# *            All rights reserved -- Property of IBM
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Default physical constraint file for the FMKU2595 equipped with a
# * 	      XCKU060.
# * File    : top_FMKU60_Flash.xdc
# *
# * Created : Oct. 2017
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, v2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the default physical constraints for
# *     operating a XCKU060 on a FMKU2595 module. The constraints are grouped
# *      by external device and connector entity names:
# *       - the synchronous dynamic random access memory (SDRM)
# *       - the programmable system on chip controller (PSOC)
# *       - the configuration Flash memory (FLASH)
# *       - the clock tree generator (CLKT)
# *       - the edge backplane connector (ECON)
# *       - the top extension connector (XCON)
# *
# *     The SDRM has the following interfaces:
# *       - a memory channel 0 (SDRM_Mch0)
# *       - a memory channel 1 (SDRM_Mch1)
# *     The PSOC has the following interfaces:
# *       - an External memory interface (PSOC_Emif)
# *       - an Fpga configuration interface (PSOC_Fcfg)
# *     The FLASH has the following interfaces:
# *       - a byte peripheral interface (FLASH_Bpi)
# *     The CLKT has the following interfaces:
# *       -
# *     The ECON has the following interfaces:
# *     The XCON has the following interfaces:
# *
# *
# *-----------------------------------------------------------------------------
# * Comments:
# *
# ******************************************************************************

#---------------------------------------------------------------------
# Setting CONFIG_VOLTAGE and CFGBVS
#   To avoid some of the DRC warnings during Bitstream generation
#---------------------------------------------------------------------
current_instance -quiet
set_property CONFIG_VOLTAGE 1.8 [current_design]
set_property CFGBVS GND [current_design]


#---------------------------------------------------------------------
# Enable bitstream compression
#---------------------------------------------------------------------
set_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]



###############################################################################
# [TODO] Flash Programming Settings: Uncomment as required by your design
# Items below between < > must be updated with correct values to work properly.
###############################################################################
# [TODO] BPI Flash Programming
#set_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]
#set_property BITSTREAM.CONFIG.EXTMASTERCCLK_EN DIV-1 [current_design]
#set_property BITSTREAM.CONFIG.BPI_SYNC_MODE TYPE1 [current_design]
#set_property CONFIG_MODE BPI16 [current_design]

# Example PROM Generation command that should be executed from the Tcl Console
# write_cfgmem -format mcs -size 128 -interface BPIx16 -loadbit {up 0x00000000 inputBitfile.bit } -file outputBitfile.mcs

#OBSOLETE-20180418 set_property CLKFBOUT_MULT_F 2 [get_cells SHELL/MEM/MC0/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst]
#OBSOLETE-20180418 set_property CLKFBOUT_MULT_F 2 [get_cells SHELL/MEM/MC1/MCC/inst/u_ddr4_infrastructure/gen_mmcme3.u_mmcme_adv_inst]



#---------------------------------------------------------------------
# Define Specific Physical Blocks (PBLOCK) for the Memory Channels
#---------------------------------------------------------------------
#create_pblock pblock_MC0
#add_cells_to_pblock [get_pblocks pblock_MC0] [get_cells -quiet [list SHELL/inst/MEM/MC0]]
#resize_pblock [get_pblocks pblock_MC0] -add {CLOCKREGION_X1Y0:CLOCKREGION_X2Y2}

#create_pblock pblock_MC1
#add_cells_to_pblock [get_pblocks pblock_MC1] [get_cells -quiet [list SHELL/inst/MEM/MC1]]
#resize_pblock [get_pblocks pblock_MC1] -add {CLOCKREGION_X3Y2:CLOCKREGION_X4Y4}


####################################################################################
# Constraints from file : 'topFMKU60_Flash_timg.xdc'
####################################################################################

# ******************************************************************************
# *
# *                        Zurich cloudFPGA
# *            All rights reserved -- Property of IBM
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Default timing constraint file for the FMKU2595 equipped with a
# *           XCKU060.
# * File    : top_FMKU60_Flash_timg.
# *
# * Created : Sep. 2017
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, v2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the default timing constraints for
# *     operating a XCKU060 on a FMKU2595 module. The constraints are grouped by
# *      external device and connector entity names:
# *       - the synchronous dynamic random access memory (SDRM)
# *       - the programmable system on chip controller (PSOC)
# *       - the configuration Flash memory (FLASH)
# *       - the clock tree generator (CLKT)
# *       - the edge backplane connector (ECON)
# *       - the top extension connector (XCON)
# *
# *     The SDRM has the following interfaces:
# *       - a memory channel 0 (SDRM_Mch0)
# *       - a memory channel 1 (SDRM_Mch1)
# *     The PSOC has the following interfaces:
# *       - an External memory interface (PSOC_Emif)
# *       - an Fpga configuration interface (PSOC_Fcfg)
# *     The FLASH has the following interfaces:
# *       - a byte peripheral interface (FLASH_Bpi)
# *     The CLKT has the following interfaces:
# *       -
# *     The ECON has the following interfaces:
# *     The XCON has the following interfaces:
# *
# *
# *-----------------------------------------------------------------------------
# * Constraints Methodology and Recommendations (according to Xilinx UG903)
# *   - Xilinx recommends to separate timing constraints and physical constraints
# *     by saving them into two distinct files.
# *   - Organize your constraints in the following sequence.
# *     [1] Timing Assertions Section
# *       - Primary clocks
# *       -  Virtual clocks
# *       -  Generated clocks
# *       -  Clock Groups
# *       -  Bus Skew constraints
# *       -  Input and output delay constraints
# *     [2] Timing Exceptions Section
# *       -  False Paths
# *       -  Max Delay / Min Delay
# *       -  Multicycle Paths
# *       -  Case Analysis
# *       -  Disable Timing
# *     [3] Physical Constraints Section
# *       -  located anywhere in the file, preferably before or after the timing constraints
# *       -  or stored in a separate constraint file
# *
# ******************************************************************************

#=====================================================================
# LED Interface
#=====================================================================

# LED / Heart beat LED
set_false_path -to [get_ports poTOP_Led_HeartBeat_n]


#=====================================================================
# Constraints related to the Clock Tree (CLKT)
#=====================================================================

# CLKT / Reference clock for the User clock #0
create_clock -period 4.000 -name piCLKT_Usr0Clk -waveform {0.000 2.000} [get_ports piCLKT_Usr0Clk_p]

# CLKT / Reference clock for GTH transceivers of the 10GE Interface
create_clock -period 6.400 [get_ports piCLKT_10GeClk_p]

# CLKT / Reference clock for the User clock #1
create_clock -period 4.000 -name piCLKT_Usr1Clk -waveform {0.000 2.000} [get_ports piCLKT_Usr1Clk_p]

# CLKT / Reference clock for the DRAM block 0
create_clock -period 3.333 -name piCLKT_Mem0Clk_p -waveform {0.000 1.667} [get_ports piCLKT_Mem0Clk_p]

# CLKT / Reference clock for the DRAM block 1
create_clock -period 3.333 -name piCLKT_Mem1Clk_p -waveform {0.000 1.667} [get_ports piCLKT_Mem1Clk_p]


#=====================================================================
# Constraints related to the Backplane Edge Connector (ECON)
#=====================================================================

# ECON / 10 Gigabit Ethernet Rx/Tx links #1


#=====================================================================
# Constraints related to the Programmable SoC (PSOC)
#=====================================================================

# PSOC / FPGA Configuration Interface
#-------------------------------------
set_false_path -from [get_ports piPSOC_Fcfg_Rst_n]


#---------------------------------------------------------------------
# PSOC / External Memory Interface (see PSoC Creator Component v1.30)
#---------------------------------------------------------------------
#
#             +---+   +---+   +---+   +---+   +---+   +---+   +---+
# Bus Clock   |   |   |   |   |   |   |   |   |   |   |   |   |   |
#          ---+   +---+   +---+   +---+   +---+   +---+   +---+   +---
#
#                         +---+                           +---+
# EMIF Clk                |   |                           |   |
#          ---------------+   +---------------------------+   +-------
#
#              +-----------------------------+ +----------------------
# EMIF Addr --X                               X
#              +-----------------------------+ +----------------------
#
#          ----------+        +-----------------------+        +------
# EMIF CTtl          |        |                       |        |
#                    +--------+                       +--------+
#
#----------------------------------------------------------------------

# PSOC / Internal Bus Clock (used here as a reference)

# PSOC / Emif - Input clock
create_clock -period 166.667 -name piPSOC_Emif_Clk -waveform {62.490 83.330} [get_ports piPSOC_Emif_Clk]

# PSoC / Emif - Address[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports {piPSOC_Emif_Addr[*]}]
set_input_delay -clock piPSOC_Emif_Clk -min 52.083 [get_ports {piPSOC_Emif_Addr[*]}]

# PSOC / Emif - Chip select - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_Cs_n]
set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_Cs_n]

# PSoC / Emif - Address Strobe - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_AdS_n]
set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_AdS_n]

# PSOC / Emif - Write enable - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_We_n]
set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_We_n]

# PSoC / Emif - Output enable - Read setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_Oe_n]
set_input_delay -clock piPSOC_Emif_Clk -min 31.250 [get_ports piPSOC_Emif_Oe_n]

# PSoC / Emif - Data[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -31.667 [get_ports {pioPSOC_Emif_Data[*]}]
set_input_delay -clock piPSOC_Emif_Clk -min 52.083 [get_ports {pioPSOC_Emif_Data[*]}]

# PSoC / Emif - Data[7:0] - Read setup and hold times
set_output_delay -clock piPSOC_Emif_Clk -max 57.500 [get_ports {pioPSOC_Emif_Data[*]}]
set_output_delay -clock piPSOC_Emif_Clk -min 67.500 [get_ports {pioPSOC_Emif_Data[*]}]


#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #0
#=====================================================================

# DDR4 / Memory Channel #0

#OBSOLETE-20180418 set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]
#OBSOLETE-20180418 set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc0_Cs_n]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc0_Cs_n]

#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #1
#=====================================================================

# DDR4 / Memory Channel #1

#OBSOLETE-20180418 set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]
#OBSOLETE-20180418 set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]
set_property SLEW FAST [get_ports poTOP_Ddr4_Mc1_Cs_n]
set_property DATA_RATE SDR [get_ports poTOP_Ddr4_Mc1_Cs_n]

#=====================================================================
# Definition of the Clock Groups and their Constraints
#=====================================================================

# Asynchronous Clocks
set_clock_groups -asynchronous -group piPSOC_Emif_Clk -group piCLKT_Usr0Clk

set_output_delay -clock [get_clocks piCLKT_Usr0Clk] -min -add_delay -5.000 [get_ports {pioPSOC_Emif_Data[*]}]
set_output_delay -clock [get_clocks piCLKT_Usr0Clk] -max -add_delay 5.000 [get_ports {pioPSOC_Emif_Data[*]}]

#=====================================================================
# Constraints added by the Timing Constarint Wizard
#=====================================================================




####################################################################################
# Constraints from file : 'roleFlash.xdc'
####################################################################################

# ******************************************************************************
# *
# *                        Zurich cloudFPGA
# *            All rights reserved -- Property of IBM
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Default timing constraint file for the Flash version of the ROLE.
# *
# * File    : roleFlash.xdc
# *
# * Created : Feb. 2018
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, 2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the timing constraints for synthesizing
# *   the Flash version of the ROLE embedded into the FMKU60 Flash device. These
# *   constraints are defined for the ROLE as if is was a standalone design.
# *
# *-----------------------------------------------------------------------------
# * Comments:
# *  - According to UG1119-Lab1, "If the created clock is internal to the IP
# *    (GT), or if the IP contains an input buffer (IBUF), the create_clock
# *    constraint should stay in the IP XDC file because it is needed to define
# *    local clocks."
# *
# ******************************************************************************


#=====================================================================
# Main synchronous clock (generated by the SHELL).
#=====================================================================

current_instance ROLE_INST
create_clock -period 6.400 [get_ports -scoped_to_current_instance piSHL_156_25Clk]

#=====================================================================
# Free running clock (generated by the TOP).
#=====================================================================

create_clock -period 6.400 [get_ports -scoped_to_current_instance piTOP_250_00Clk]




####################################################################################
# Constraints from file : 'topFMKU60_Flash_pins.xdc'
####################################################################################

# ******************************************************************************
# *
# *                        Zurich cloudFPGA
# *            All rights reserved -- Property of IBM
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Physical pin constraints file for the FMKU2595 equipped with a
# * 	        XCKU060.
# *
# * File    : topFMKU60_Flash_pins.xdc
# *
# * Created : Sep. 2017
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, v2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the physical pin constraints for
# *     operating a XCKU060 on a FMKU2595 module. The constraints are grouped
# *      by external device and connector entity names:
# *       - the synchronous dynamic random access memory (DDR4)
# *       - the programmable system on chip controller (PSOC)
# *       - the configuration Flash memory (FLASH)
# *       - the clock tree generator (CLKT)
# *       - the edge backplane connector (ECON)
# *       - the top extension connector (XCON)
# *
# *     The DDR4 has the following interfaces:
# *       - a memory channel 0 (DDR4_Mc0)
# *       - a memory channel 1 (DDR4_Mc1)
# *     The PSOC has the following interfaces:
# *       - an External memory interface (PSOC_Emif)
# *       - an Fpga configuration interface (PSOC_Fcfg)
# *     The FLASH has the following interfaces:
# *       - a byte peripheral interface (FLASH_Bpi)
# *     The CLKT has the following interfaces:
# *       - User clocks 0 and 1 (CLKT_Usr0 and CLKT_Usr1)
# *       - Dynamic random access memory clocks 0 and 1 (Mem0, Mem1)
# *       - Gigabit transceiver clocks (CLKT_10Ge and CLKT_Gtio)
# *     The ECON has the following interfaces:
# *       - 10GE[0] Rx and Tx transceives (ECON_10Ge0)
# *     The XCON has the following interfaces:
# *       - [TODO]
# *
# *-----------------------------------------------------------------------------
# * Comments:
# *
# ******************************************************************************


#---------------------------------------------------------------------
# Setting UNUSEDPIN
#---------------------------------------------------------------------
#set_property BITSTREAM.CONFIG.UNUSEDPIN PULLNONE [current_design]

#---------------------------------------------------------------------
# LED Interface (Heart beat)
#---------------------------------------------------------------------
current_instance -quiet
set_property PACKAGE_PIN J24 [get_ports poTOP_Led_HeartBeat_n]
set_property IOSTANDARD LVCMOS18 [get_ports poTOP_Led_HeartBeat_n]

#---------------------------------------------------------------------
# Constraints related to the Clock Tree (CLKT)
#---------------------------------------------------------------------

# CLKT / Reference clock for GTH transceivers of the 10GE Interface
set_property PACKAGE_PIN V5 [get_ports piCLKT_10GeClk_n]
set_property PACKAGE_PIN V6 [get_ports piCLKT_10GeClk_p]

# CLKT / Reference clock for the DRAM block 0
set_property PACKAGE_PIN AJ24 [get_ports piCLKT_Mem0Clk_n]
set_property PACKAGE_PIN AJ23 [get_ports piCLKT_Mem0Clk_p]
set_property IOSTANDARD LVDS [get_ports piCLKT_Mem0Clk_n]
set_property IOSTANDARD LVDS [get_ports piCLKT_Mem0Clk_p]

# CLKT / Reference clock for the DRAM block 1
set_property PACKAGE_PIN D16 [get_ports piCLKT_Mem1Clk_n]
set_property PACKAGE_PIN E16 [get_ports piCLKT_Mem1Clk_p]
set_property IOSTANDARD LVDS [get_ports piCLKT_Mem1Clk_n]
set_property IOSTANDARD LVDS [get_ports piCLKT_Mem1Clk_p]

# CLKT / User Clock 0
set_property PACKAGE_PIN AK21 [get_ports piCLKT_Usr0Clk_n]
set_property PACKAGE_PIN AJ21 [get_ports piCLKT_Usr0Clk_p]
set_property IOSTANDARD LVDS [get_ports piCLKT_Usr0Clk_n]
set_property IOSTANDARD LVDS [get_ports piCLKT_Usr0Clk_p]

# CLKT / User Clock 1
set_property PACKAGE_PIN G16 [get_ports piCLKT_Usr1Clk_n]
set_property PACKAGE_PIN G17 [get_ports piCLKT_Usr1Clk_p]
set_property IOSTANDARD LVDS [get_ports piCLKT_Usr1Clk_n]
set_property IOSTANDARD LVDS [get_ports piCLKT_Usr1Clk_p]

#---------------------------------------------------------------------
# Constraints related to the Backplane Edge Connector (ECON)
#---------------------------------------------------------------------

# ECON / 10 Gigabit Ethernet Rx/Tx links #0
set_property PACKAGE_PIN Y1 [get_ports piECON_Top_10Ge0_n]
set_property PACKAGE_PIN Y2 [get_ports piECON_Top_10Ge0_p]
set_property PACKAGE_PIN AA3 [get_ports poTOP_Econ_10Ge0_n]
set_property PACKAGE_PIN AA4 [get_ports poTOP_Econ_10Ge0_p]

# ECON / 10 Gigabit Ethernet Rx/Tx links #1
####set_property package_pin M1   [get_ports piECON_Top_10Ge1_n]
####set_property package_pin M2   [get_ports piECON_Top_10Ge1_p]
####set_property package_pin N3   [get_ports poTOP_Econ_10Ge1_n]
####set_property package_pin N4   [get_ports poTOP_Econ_10Ge1_p]

#---------------------------------------------------------------------
# Constraints related to the Programmable SoC (PSOC)
#---------------------------------------------------------------------

# PSOC / FPGA Configuration Interface
#-------------------------------------
set_property PACKAGE_PIN H23 [get_ports piPSOC_Fcfg_Rst_n]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Fcfg_Rst_n]

# PSOC / External Memory Interface
#----------------------------------

# PSOC / Emif - Input clock
set_property PACKAGE_PIN AA32 [get_ports piPSOC_Emif_Clk]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Emif_Clk]

# PSOC / Emif - Chip select
set_property PACKAGE_PIN AC31 [get_ports piPSOC_Emif_Cs_n]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Emif_Cs_n]

# PSOC / Emif - Write enable
set_property PACKAGE_PIN AC32 [get_ports piPSOC_Emif_We_n]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Emif_We_n]

# PSoC / Emif - Output enable
set_property PACKAGE_PIN AD30 [get_ports piPSOC_Emif_Oe_n]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Emif_Oe_n]

# PSoC / Emif - Address Strobe
set_property PACKAGE_PIN AB32 [get_ports piPSOC_Emif_AdS_n]
set_property IOSTANDARD LVCMOS18 [get_ports piPSOC_Emif_AdS_n]

# PSoC / Emif - Address[7:0]
set_property PACKAGE_PIN AC28 [get_ports {piPSOC_Emif_Addr[0]}]
set_property PACKAGE_PIN AD28 [get_ports {piPSOC_Emif_Addr[1]}]
set_property PACKAGE_PIN AF29 [get_ports {piPSOC_Emif_Addr[2]}]
set_property PACKAGE_PIN AG29 [get_ports {piPSOC_Emif_Addr[3]}]
set_property PACKAGE_PIN AE30 [get_ports {piPSOC_Emif_Addr[4]}]
set_property PACKAGE_PIN AG30 [get_ports {piPSOC_Emif_Addr[5]}]
set_property PACKAGE_PIN AF30 [get_ports {piPSOC_Emif_Addr[6]}]
set_property PACKAGE_PIN AD29 [get_ports {piPSOC_Emif_Addr[7]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[0]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[1]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[2]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[3]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[4]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[5]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[6]}]
set_property IOSTANDARD LVCMOS18 [get_ports {piPSOC_Emif_Addr[7]}]

# PSoC / Emif - Data[7:0]
set_property PACKAGE_PIN AG32 [get_ports {pioPSOC_Emif_Data[0]}]
set_property PACKAGE_PIN AG31 [get_ports {pioPSOC_Emif_Data[1]}]
set_property PACKAGE_PIN AE32 [get_ports {pioPSOC_Emif_Data[2]}]
set_property PACKAGE_PIN AF33 [get_ports {pioPSOC_Emif_Data[3]}]
set_property PACKAGE_PIN AF32 [get_ports {pioPSOC_Emif_Data[4]}]
set_property PACKAGE_PIN AG34 [get_ports {pioPSOC_Emif_Data[5]}]
set_property PACKAGE_PIN AF34 [get_ports {pioPSOC_Emif_Data[6]}]
set_property PACKAGE_PIN AE33 [get_ports {pioPSOC_Emif_Data[7]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[0]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[1]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[2]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[3]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[4]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[5]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[6]}]
set_property IOSTANDARD LVCMOS18 [get_ports {pioPSOC_Emif_Data[7]}]

#---------------------------------------------------------------------
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #0
#---------------------------------------------------------------------
set_property PACKAGE_PIN AE22 [get_ports poTOP_Ddr4_Mc0_Reset_n]
set_property IOSTANDARD LVCMOS12 [get_ports poTOP_Ddr4_Mc0_Reset_n]
set_property DRIVE 8 [get_ports poTOP_Ddr4_Mc0_Reset_n]

set_property PACKAGE_PIN AL32 [get_ports {pioDDR_Top_Mc0_DmDbi_n[0]}]
set_property PACKAGE_PIN AJ29 [get_ports {pioDDR_Top_Mc0_DmDbi_n[1]}]
set_property PACKAGE_PIN AN26 [get_ports {pioDDR_Top_Mc0_DmDbi_n[2]}]
set_property PACKAGE_PIN AH26 [get_ports {pioDDR_Top_Mc0_DmDbi_n[3]}]
set_property PACKAGE_PIN AD19 [get_ports {pioDDR_Top_Mc0_DmDbi_n[4]}]
set_property PACKAGE_PIN AH18 [get_ports {pioDDR_Top_Mc0_DmDbi_n[5]}]
set_property PACKAGE_PIN AL14 [get_ports {pioDDR_Top_Mc0_DmDbi_n[6]}]
set_property PACKAGE_PIN AN14 [get_ports {pioDDR_Top_Mc0_DmDbi_n[7]}]
set_property PACKAGE_PIN AM21 [get_ports {pioDDR_Top_Mc0_DmDbi_n[8]}]
set_property IOSTANDARD POD12_DCI [get_ports {pioDDR_Top_Mc0_DmDbi_n[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc0_DmDbi_n[*]}]

set_property PACKAGE_PIN AN31 [get_ports {pioDDR_Top_Mc0_Dq[0]}]
set_property PACKAGE_PIN AL34 [get_ports {pioDDR_Top_Mc0_Dq[1]}]
set_property PACKAGE_PIN AN32 [get_ports {pioDDR_Top_Mc0_Dq[2]}]
set_property PACKAGE_PIN AP33 [get_ports {pioDDR_Top_Mc0_Dq[3]}]
set_property PACKAGE_PIN AM32 [get_ports {pioDDR_Top_Mc0_Dq[4]}]
set_property PACKAGE_PIN AM34 [get_ports {pioDDR_Top_Mc0_Dq[5]}]
set_property PACKAGE_PIN AP31 [get_ports {pioDDR_Top_Mc0_Dq[6]}]
set_property PACKAGE_PIN AN33 [get_ports {pioDDR_Top_Mc0_Dq[7]}]
set_property PACKAGE_PIN AH32 [get_ports {pioDDR_Top_Mc0_Dq[8]}]
set_property PACKAGE_PIN AJ30 [get_ports {pioDDR_Top_Mc0_Dq[9]}]
set_property PACKAGE_PIN AJ34 [get_ports {pioDDR_Top_Mc0_Dq[10]}]
set_property PACKAGE_PIN AK32 [get_ports {pioDDR_Top_Mc0_Dq[11]}]
set_property PACKAGE_PIN AH34 [get_ports {pioDDR_Top_Mc0_Dq[12]}]
set_property PACKAGE_PIN AK31 [get_ports {pioDDR_Top_Mc0_Dq[13]}]
set_property PACKAGE_PIN AH31 [get_ports {pioDDR_Top_Mc0_Dq[14]}]
set_property PACKAGE_PIN AJ31 [get_ports {pioDDR_Top_Mc0_Dq[15]}]
set_property PACKAGE_PIN AL30 [get_ports {pioDDR_Top_Mc0_Dq[16]}]
set_property PACKAGE_PIN AN27 [get_ports {pioDDR_Top_Mc0_Dq[17]}]
set_property PACKAGE_PIN AP29 [get_ports {pioDDR_Top_Mc0_Dq[18]}]
set_property PACKAGE_PIN AP28 [get_ports {pioDDR_Top_Mc0_Dq[19]}]
set_property PACKAGE_PIN AL29 [get_ports {pioDDR_Top_Mc0_Dq[20]}]
set_property PACKAGE_PIN AM29 [get_ports {pioDDR_Top_Mc0_Dq[21]}]
set_property PACKAGE_PIN AM30 [get_ports {pioDDR_Top_Mc0_Dq[22]}]
set_property PACKAGE_PIN AN28 [get_ports {pioDDR_Top_Mc0_Dq[23]}]
set_property PACKAGE_PIN AK27 [get_ports {pioDDR_Top_Mc0_Dq[24]}]
set_property PACKAGE_PIN AH27 [get_ports {pioDDR_Top_Mc0_Dq[25]}]
set_property PACKAGE_PIN AM26 [get_ports {pioDDR_Top_Mc0_Dq[26]}]
set_property PACKAGE_PIN AJ28 [get_ports {pioDDR_Top_Mc0_Dq[27]}]
set_property PACKAGE_PIN AK26 [get_ports {pioDDR_Top_Mc0_Dq[28]}]
set_property PACKAGE_PIN AH28 [get_ports {pioDDR_Top_Mc0_Dq[29]}]
set_property PACKAGE_PIN AM27 [get_ports {pioDDR_Top_Mc0_Dq[30]}]
set_property PACKAGE_PIN AK28 [get_ports {pioDDR_Top_Mc0_Dq[31]}]
set_property PACKAGE_PIN AD16 [get_ports {pioDDR_Top_Mc0_Dq[32]}]
set_property PACKAGE_PIN AF15 [get_ports {pioDDR_Top_Mc0_Dq[33]}]
set_property PACKAGE_PIN AF14 [get_ports {pioDDR_Top_Mc0_Dq[34]}]
set_property PACKAGE_PIN AF17 [get_ports {pioDDR_Top_Mc0_Dq[35]}]
set_property PACKAGE_PIN AE17 [get_ports {pioDDR_Top_Mc0_Dq[36]}]
set_property PACKAGE_PIN AE18 [get_ports {pioDDR_Top_Mc0_Dq[37]}]
set_property PACKAGE_PIN AD15 [get_ports {pioDDR_Top_Mc0_Dq[38]}]
set_property PACKAGE_PIN AF18 [get_ports {pioDDR_Top_Mc0_Dq[39]}]
set_property PACKAGE_PIN AH19 [get_ports {pioDDR_Top_Mc0_Dq[40]}]
set_property PACKAGE_PIN AG16 [get_ports {pioDDR_Top_Mc0_Dq[41]}]
set_property PACKAGE_PIN AH16 [get_ports {pioDDR_Top_Mc0_Dq[42]}]
set_property PACKAGE_PIN AG17 [get_ports {pioDDR_Top_Mc0_Dq[43]}]
set_property PACKAGE_PIN AG19 [get_ports {pioDDR_Top_Mc0_Dq[44]}]
set_property PACKAGE_PIN AG14 [get_ports {pioDDR_Top_Mc0_Dq[45]}]
set_property PACKAGE_PIN AJ16 [get_ports {pioDDR_Top_Mc0_Dq[46]}]
set_property PACKAGE_PIN AG15 [get_ports {pioDDR_Top_Mc0_Dq[47]}]
set_property PACKAGE_PIN AL15 [get_ports {pioDDR_Top_Mc0_Dq[48]}]
set_property PACKAGE_PIN AK18 [get_ports {pioDDR_Top_Mc0_Dq[49]}]
set_property PACKAGE_PIN AK17 [get_ports {pioDDR_Top_Mc0_Dq[50]}]
set_property PACKAGE_PIN AJ18 [get_ports {pioDDR_Top_Mc0_Dq[51]}]
set_property PACKAGE_PIN AK15 [get_ports {pioDDR_Top_Mc0_Dq[52]}]
set_property PACKAGE_PIN AL19 [get_ports {pioDDR_Top_Mc0_Dq[53]}]
set_property PACKAGE_PIN AK16 [get_ports {pioDDR_Top_Mc0_Dq[54]}]
set_property PACKAGE_PIN AM19 [get_ports {pioDDR_Top_Mc0_Dq[55]}]
set_property PACKAGE_PIN AP18 [get_ports {pioDDR_Top_Mc0_Dq[56]}]
set_property PACKAGE_PIN AP16 [get_ports {pioDDR_Top_Mc0_Dq[57]}]
set_property PACKAGE_PIN AM16 [get_ports {pioDDR_Top_Mc0_Dq[58]}]
set_property PACKAGE_PIN AN16 [get_ports {pioDDR_Top_Mc0_Dq[59]}]
set_property PACKAGE_PIN AN19 [get_ports {pioDDR_Top_Mc0_Dq[60]}]
set_property PACKAGE_PIN AM15 [get_ports {pioDDR_Top_Mc0_Dq[61]}]
set_property PACKAGE_PIN AM17 [get_ports {pioDDR_Top_Mc0_Dq[62]}]
set_property PACKAGE_PIN AP15 [get_ports {pioDDR_Top_Mc0_Dq[63]}]
set_property PACKAGE_PIN AP25 [get_ports {pioDDR_Top_Mc0_Dq[64]}]
set_property PACKAGE_PIN AP23 [get_ports {pioDDR_Top_Mc0_Dq[65]}]
set_property PACKAGE_PIN AP24 [get_ports {pioDDR_Top_Mc0_Dq[66]}]
set_property PACKAGE_PIN AN23 [get_ports {pioDDR_Top_Mc0_Dq[67]}]
set_property PACKAGE_PIN AN24 [get_ports {pioDDR_Top_Mc0_Dq[68]}]
set_property PACKAGE_PIN AN22 [get_ports {pioDDR_Top_Mc0_Dq[69]}]
set_property PACKAGE_PIN AM24 [get_ports {pioDDR_Top_Mc0_Dq[70]}]
set_property PACKAGE_PIN AM22 [get_ports {pioDDR_Top_Mc0_Dq[71]}]
set_property IOSTANDARD POD12_DCI [get_ports {pioDDR_Top_Mc0_Dq[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc0_Dq[*]}]

set_property PACKAGE_PIN AP34 [get_ports {pioDDR_Top_Mc0_Dqs_n[0]}]
set_property PACKAGE_PIN AN34 [get_ports {pioDDR_Top_Mc0_Dqs_p[0]}]
set_property PACKAGE_PIN AJ33 [get_ports {pioDDR_Top_Mc0_Dqs_n[1]}]
set_property PACKAGE_PIN AH33 [get_ports {pioDDR_Top_Mc0_Dqs_p[1]}]
set_property PACKAGE_PIN AP30 [get_ports {pioDDR_Top_Mc0_Dqs_n[2]}]
set_property PACKAGE_PIN AN29 [get_ports {pioDDR_Top_Mc0_Dqs_p[2]}]
set_property PACKAGE_PIN AL28 [get_ports {pioDDR_Top_Mc0_Dqs_n[3]}]
set_property PACKAGE_PIN AL27 [get_ports {pioDDR_Top_Mc0_Dqs_p[3]}]
set_property PACKAGE_PIN AE15 [get_ports {pioDDR_Top_Mc0_Dqs_n[4]}]
set_property PACKAGE_PIN AE16 [get_ports {pioDDR_Top_Mc0_Dqs_p[4]}]
set_property PACKAGE_PIN AJ14 [get_ports {pioDDR_Top_Mc0_Dqs_n[5]}]
set_property PACKAGE_PIN AJ15 [get_ports {pioDDR_Top_Mc0_Dqs_p[5]}]
set_property PACKAGE_PIN AL17 [get_ports {pioDDR_Top_Mc0_Dqs_n[6]}]
set_property PACKAGE_PIN AL18 [get_ports {pioDDR_Top_Mc0_Dqs_p[6]}]
set_property PACKAGE_PIN AN17 [get_ports {pioDDR_Top_Mc0_Dqs_n[7]}]
set_property PACKAGE_PIN AN18 [get_ports {pioDDR_Top_Mc0_Dqs_p[7]}]
set_property PACKAGE_PIN AP21 [get_ports {pioDDR_Top_Mc0_Dqs_n[8]}]
set_property PACKAGE_PIN AP20 [get_ports {pioDDR_Top_Mc0_Dqs_p[8]}]
set_property IOSTANDARD DIFF_POD12_DCI [get_ports {pioDDR_Top_Mc0_Dqs_n[*]}]
set_property IOSTANDARD DIFF_POD12_DCI [get_ports {pioDDR_Top_Mc0_Dqs_p[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc0_Dqs_n[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc0_Dqs_p[*]}]

set_property PACKAGE_PIN AH23 [get_ports poTOP_Ddr4_Mc0_Act_n]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Act_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Act_n]

set_property PACKAGE_PIN AF22 [get_ports {poTOP_Ddr4_Mc0_Adr[0]}]
set_property PACKAGE_PIN AG21 [get_ports {poTOP_Ddr4_Mc0_Adr[1]}]
set_property PACKAGE_PIN AG20 [get_ports {poTOP_Ddr4_Mc0_Adr[2]}]
set_property PACKAGE_PIN AK22 [get_ports {poTOP_Ddr4_Mc0_Adr[3]}]
set_property PACKAGE_PIN AL22 [get_ports {poTOP_Ddr4_Mc0_Adr[4]}]
set_property PACKAGE_PIN AN21 [get_ports {poTOP_Ddr4_Mc0_Adr[5]}]
set_property PACKAGE_PIN AD20 [get_ports {poTOP_Ddr4_Mc0_Adr[6]}]
set_property PACKAGE_PIN AL20 [get_ports {poTOP_Ddr4_Mc0_Adr[7]}]
set_property PACKAGE_PIN AE20 [get_ports {poTOP_Ddr4_Mc0_Adr[8]}]
set_property PACKAGE_PIN AK20 [get_ports {poTOP_Ddr4_Mc0_Adr[9]}]
set_property PACKAGE_PIN AG22 [get_ports {poTOP_Ddr4_Mc0_Adr[10]}]
set_property PACKAGE_PIN AF20 [get_ports {poTOP_Ddr4_Mc0_Adr[11]}]
set_property PACKAGE_PIN AF24 [get_ports {poTOP_Ddr4_Mc0_Adr[12]}]
set_property PACKAGE_PIN AJ20 [get_ports {poTOP_Ddr4_Mc0_Adr[13]}]
set_property PACKAGE_PIN AE23 [get_ports {poTOP_Ddr4_Mc0_Adr[14]}]
set_property PACKAGE_PIN AK25 [get_ports {poTOP_Ddr4_Mc0_Adr[15]}]
set_property PACKAGE_PIN AF23 [get_ports {poTOP_Ddr4_Mc0_Adr[16]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Adr[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Adr[*]}]

set_property PACKAGE_PIN AK23 [get_ports {poTOP_Ddr4_Mc0_Ba[0]}]
set_property PACKAGE_PIN AJ25 [get_ports {poTOP_Ddr4_Mc0_Ba[1]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Ba[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Ba[*]}]

set_property PACKAGE_PIN AL23 [get_ports {poTOP_Ddr4_Mc0_Bg[0]}]
set_property PACKAGE_PIN AL24 [get_ports {poTOP_Ddr4_Mc0_Bg[1]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Bg[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Bg[*]}]

set_property PACKAGE_PIN AG25 [get_ports poTOP_Ddr4_Mc0_Ck_n]
set_property PACKAGE_PIN AG24 [get_ports poTOP_Ddr4_Mc0_Ck_p]
set_property IOSTANDARD DIFF_SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Ck_n]
set_property IOSTANDARD DIFF_SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Ck_p]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Ck_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Ck_p]

set_property PACKAGE_PIN AD21 [get_ports poTOP_Ddr4_Mc0_Cke]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Cke]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Cke]
# [IS-NOT-USED] set_property PACKAGE_PIN      AG25        [get_ports {poTOP_Ddr4_Mc0_Cke[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Cke[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Cke[*]}]

set_property PACKAGE_PIN AL25 [get_ports poTOP_Ddr4_Mc0_Cs_n]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Cs_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Cs_n]
# [IS-NOT-USED] set_property PACKAGE_PIN AH24 [get_ports {poTOP_Ddr4_Mc0_Cs_n[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]

set_property PACKAGE_PIN AF25 [get_ports poTOP_Ddr4_Mc0_Odt]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc0_Odt]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc0_Odt]
# [IS-NOT-USED] set_property PACKAGE_PIN      AE26        [get_ports {poTOP_Ddr4_Mc0_Odt[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc0_Odt[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc0_Odt[*]}]


#---------------------------------------------------------------------
# Constraints related to the Synchronous Dynamic RAM (SDDR4)
#   DDR4 / Memory Channel #1
#---------------------------------------------------------------------
set_property PACKAGE_PIN H18 [get_ports poTOP_Ddr4_Mc1_Reset_n]
set_property IOSTANDARD LVCMOS12 [get_ports poTOP_Ddr4_Mc1_Reset_n]
set_property DRIVE 8 [get_ports poTOP_Ddr4_Mc1_Reset_n]

set_property PACKAGE_PIN F8 [get_ports {pioDDR_Top_Mc1_DmDbi_n[0]}]
set_property PACKAGE_PIN L8 [get_ports {pioDDR_Top_Mc1_DmDbi_n[1]}]
set_property PACKAGE_PIN H11 [get_ports {pioDDR_Top_Mc1_DmDbi_n[2]}]
set_property PACKAGE_PIN E11 [get_ports {pioDDR_Top_Mc1_DmDbi_n[3]}]
set_property PACKAGE_PIN F27 [get_ports {pioDDR_Top_Mc1_DmDbi_n[4]}]
set_property PACKAGE_PIN E26 [get_ports {pioDDR_Top_Mc1_DmDbi_n[5]}]
set_property PACKAGE_PIN D23 [get_ports {pioDDR_Top_Mc1_DmDbi_n[6]}]
set_property PACKAGE_PIN G24 [get_ports {pioDDR_Top_Mc1_DmDbi_n[7]}]
set_property PACKAGE_PIN B14 [get_ports {pioDDR_Top_Mc1_DmDbi_n[8]}]
set_property IOSTANDARD POD12_DCI [get_ports {pioDDR_Top_Mc1_DmDbi_n[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc1_DmDbi_n[*]}]

set_property PACKAGE_PIN C8 [get_ports {pioDDR_Top_Mc1_Dq[0]}]
set_property PACKAGE_PIN E10 [get_ports {pioDDR_Top_Mc1_Dq[1]}]
set_property PACKAGE_PIN C9 [get_ports {pioDDR_Top_Mc1_Dq[2]}]
set_property PACKAGE_PIN D10 [get_ports {pioDDR_Top_Mc1_Dq[3]}]
set_property PACKAGE_PIN D9 [get_ports {pioDDR_Top_Mc1_Dq[4]}]
set_property PACKAGE_PIN A9 [get_ports {pioDDR_Top_Mc1_Dq[5]}]
set_property PACKAGE_PIN D8 [get_ports {pioDDR_Top_Mc1_Dq[6]}]
set_property PACKAGE_PIN B9 [get_ports {pioDDR_Top_Mc1_Dq[7]}]
set_property PACKAGE_PIN G10 [get_ports {pioDDR_Top_Mc1_Dq[8]}]
set_property PACKAGE_PIN J8 [get_ports {pioDDR_Top_Mc1_Dq[9]}]
set_property PACKAGE_PIN G9 [get_ports {pioDDR_Top_Mc1_Dq[10]}]
set_property PACKAGE_PIN F9 [get_ports {pioDDR_Top_Mc1_Dq[11]}]
set_property PACKAGE_PIN H9 [get_ports {pioDDR_Top_Mc1_Dq[12]}]
set_property PACKAGE_PIN H8 [get_ports {pioDDR_Top_Mc1_Dq[13]}]
set_property PACKAGE_PIN J9 [get_ports {pioDDR_Top_Mc1_Dq[14]}]
set_property PACKAGE_PIN F10 [get_ports {pioDDR_Top_Mc1_Dq[15]}]
set_property PACKAGE_PIN J13 [get_ports {pioDDR_Top_Mc1_Dq[16]}]
set_property PACKAGE_PIN K11 [get_ports {pioDDR_Top_Mc1_Dq[17]}]
set_property PACKAGE_PIN G12 [get_ports {pioDDR_Top_Mc1_Dq[18]}]
set_property PACKAGE_PIN K12 [get_ports {pioDDR_Top_Mc1_Dq[19]}]
set_property PACKAGE_PIN H13 [get_ports {pioDDR_Top_Mc1_Dq[20]}]
set_property PACKAGE_PIN L12 [get_ports {pioDDR_Top_Mc1_Dq[21]}]
set_property PACKAGE_PIN H12 [get_ports {pioDDR_Top_Mc1_Dq[22]}]
set_property PACKAGE_PIN J11 [get_ports {pioDDR_Top_Mc1_Dq[23]}]
set_property PACKAGE_PIN B11 [get_ports {pioDDR_Top_Mc1_Dq[24]}]
set_property PACKAGE_PIN C12 [get_ports {pioDDR_Top_Mc1_Dq[25]}]
set_property PACKAGE_PIN B12 [get_ports {pioDDR_Top_Mc1_Dq[26]}]
set_property PACKAGE_PIN A13 [get_ports {pioDDR_Top_Mc1_Dq[27]}]
set_property PACKAGE_PIN A12 [get_ports {pioDDR_Top_Mc1_Dq[28]}]
set_property PACKAGE_PIN D13 [get_ports {pioDDR_Top_Mc1_Dq[29]}]
set_property PACKAGE_PIN C11 [get_ports {pioDDR_Top_Mc1_Dq[30]}]
set_property PACKAGE_PIN C13 [get_ports {pioDDR_Top_Mc1_Dq[31]}]
set_property PACKAGE_PIN C27 [get_ports {pioDDR_Top_Mc1_Dq[32]}]
set_property PACKAGE_PIN C28 [get_ports {pioDDR_Top_Mc1_Dq[33]}]
set_property PACKAGE_PIN B27 [get_ports {pioDDR_Top_Mc1_Dq[34]}]
set_property PACKAGE_PIN D28 [get_ports {pioDDR_Top_Mc1_Dq[35]}]
set_property PACKAGE_PIN A27 [get_ports {pioDDR_Top_Mc1_Dq[36]}]
set_property PACKAGE_PIN E28 [get_ports {pioDDR_Top_Mc1_Dq[37]}]
set_property PACKAGE_PIN A28 [get_ports {pioDDR_Top_Mc1_Dq[38]}]
set_property PACKAGE_PIN D29 [get_ports {pioDDR_Top_Mc1_Dq[39]}]
set_property PACKAGE_PIN D24 [get_ports {pioDDR_Top_Mc1_Dq[40]}]
set_property PACKAGE_PIN C24 [get_ports {pioDDR_Top_Mc1_Dq[41]}]
set_property PACKAGE_PIN D25 [get_ports {pioDDR_Top_Mc1_Dq[42]}]
set_property PACKAGE_PIN B25 [get_ports {pioDDR_Top_Mc1_Dq[43]}]
set_property PACKAGE_PIN E25 [get_ports {pioDDR_Top_Mc1_Dq[44]}]
set_property PACKAGE_PIN A25 [get_ports {pioDDR_Top_Mc1_Dq[45]}]
set_property PACKAGE_PIN B26 [get_ports {pioDDR_Top_Mc1_Dq[46]}]
set_property PACKAGE_PIN C26 [get_ports {pioDDR_Top_Mc1_Dq[47]}]
set_property PACKAGE_PIN B20 [get_ports {pioDDR_Top_Mc1_Dq[48]}]
set_property PACKAGE_PIN D21 [get_ports {pioDDR_Top_Mc1_Dq[49]}]
set_property PACKAGE_PIN D20 [get_ports {pioDDR_Top_Mc1_Dq[50]}]
set_property PACKAGE_PIN A20 [get_ports {pioDDR_Top_Mc1_Dq[51]}]
set_property PACKAGE_PIN B21 [get_ports {pioDDR_Top_Mc1_Dq[52]}]
set_property PACKAGE_PIN E22 [get_ports {pioDDR_Top_Mc1_Dq[53]}]
set_property PACKAGE_PIN B22 [get_ports {pioDDR_Top_Mc1_Dq[54]}]
set_property PACKAGE_PIN E23 [get_ports {pioDDR_Top_Mc1_Dq[55]}]
set_property PACKAGE_PIN F24 [get_ports {pioDDR_Top_Mc1_Dq[56]}]
set_property PACKAGE_PIN E20 [get_ports {pioDDR_Top_Mc1_Dq[57]}]
set_property PACKAGE_PIN G22 [get_ports {pioDDR_Top_Mc1_Dq[58]}]
set_property PACKAGE_PIN G21 [get_ports {pioDDR_Top_Mc1_Dq[59]}]
set_property PACKAGE_PIN F22 [get_ports {pioDDR_Top_Mc1_Dq[60]}]
set_property PACKAGE_PIN H21 [get_ports {pioDDR_Top_Mc1_Dq[61]}]
set_property PACKAGE_PIN F23 [get_ports {pioDDR_Top_Mc1_Dq[62]}]
set_property PACKAGE_PIN E21 [get_ports {pioDDR_Top_Mc1_Dq[63]}]
set_property PACKAGE_PIN A15 [get_ports {pioDDR_Top_Mc1_Dq[64]}]
set_property PACKAGE_PIN B17 [get_ports {pioDDR_Top_Mc1_Dq[65]}]
set_property PACKAGE_PIN C17 [get_ports {pioDDR_Top_Mc1_Dq[66]}]
set_property PACKAGE_PIN A19 [get_ports {pioDDR_Top_Mc1_Dq[67]}]
set_property PACKAGE_PIN B15 [get_ports {pioDDR_Top_Mc1_Dq[68]}]
set_property PACKAGE_PIN C18 [get_ports {pioDDR_Top_Mc1_Dq[69]}]
set_property PACKAGE_PIN B16 [get_ports {pioDDR_Top_Mc1_Dq[70]}]
set_property PACKAGE_PIN A18 [get_ports {pioDDR_Top_Mc1_Dq[71]}]
set_property IOSTANDARD POD12_DCI [get_ports {pioDDR_Top_Mc1_Dq[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc1_Dq[*]}]

set_property PACKAGE_PIN A10 [get_ports {pioDDR_Top_Mc1_Dqs_n[0]}]
set_property PACKAGE_PIN B10 [get_ports {pioDDR_Top_Mc1_Dqs_p[0]}]
set_property PACKAGE_PIN J10 [get_ports {pioDDR_Top_Mc1_Dqs_n[1]}]
set_property PACKAGE_PIN K10 [get_ports {pioDDR_Top_Mc1_Dqs_p[1]}]
set_property PACKAGE_PIN K13 [get_ports {pioDDR_Top_Mc1_Dqs_n[2]}]
set_property PACKAGE_PIN L13 [get_ports {pioDDR_Top_Mc1_Dqs_p[2]}]
set_property PACKAGE_PIN E13 [get_ports {pioDDR_Top_Mc1_Dqs_n[3]}]
set_property PACKAGE_PIN F13 [get_ports {pioDDR_Top_Mc1_Dqs_p[3]}]
set_property PACKAGE_PIN A29 [get_ports {pioDDR_Top_Mc1_Dqs_n[4]}]
set_property PACKAGE_PIN B29 [get_ports {pioDDR_Top_Mc1_Dqs_p[4]}]
set_property PACKAGE_PIN A24 [get_ports {pioDDR_Top_Mc1_Dqs_n[5]}]
set_property PACKAGE_PIN B24 [get_ports {pioDDR_Top_Mc1_Dqs_p[5]}]
set_property PACKAGE_PIN C22 [get_ports {pioDDR_Top_Mc1_Dqs_n[6]}]
set_property PACKAGE_PIN C21 [get_ports {pioDDR_Top_Mc1_Dqs_p[6]}]
set_property PACKAGE_PIN F20 [get_ports {pioDDR_Top_Mc1_Dqs_n[7]}]
set_property PACKAGE_PIN G20 [get_ports {pioDDR_Top_Mc1_Dqs_p[7]}]
set_property PACKAGE_PIN B19 [get_ports {pioDDR_Top_Mc1_Dqs_n[8]}]
set_property PACKAGE_PIN C19 [get_ports {pioDDR_Top_Mc1_Dqs_p[8]}]
set_property IOSTANDARD DIFF_POD12_DCI [get_ports {pioDDR_Top_Mc1_Dqs_n[*]}]
set_property IOSTANDARD DIFF_POD12_DCI [get_ports {pioDDR_Top_Mc1_Dqs_p[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc1_Dqs_n[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {pioDDR_Top_Mc1_Dqs_p[*]}]

set_property PACKAGE_PIN L15 [get_ports poTOP_Ddr4_Mc1_Act_n]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Act_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Act_n]

set_property PACKAGE_PIN F18 [get_ports {poTOP_Ddr4_Mc1_Adr[0]}]
set_property PACKAGE_PIN D19 [get_ports {poTOP_Ddr4_Mc1_Adr[1]}]
set_property PACKAGE_PIN G19 [get_ports {poTOP_Ddr4_Mc1_Adr[2]}]
set_property PACKAGE_PIN K18 [get_ports {poTOP_Ddr4_Mc1_Adr[3]}]
set_property PACKAGE_PIN J19 [get_ports {poTOP_Ddr4_Mc1_Adr[4]}]
set_property PACKAGE_PIN D18 [get_ports {poTOP_Ddr4_Mc1_Adr[5]}]
set_property PACKAGE_PIN E15 [get_ports {poTOP_Ddr4_Mc1_Adr[6]}]
set_property PACKAGE_PIN F19 [get_ports {poTOP_Ddr4_Mc1_Adr[7]}]
set_property PACKAGE_PIN G14 [get_ports {poTOP_Ddr4_Mc1_Adr[8]}]
set_property PACKAGE_PIN L19 [get_ports {poTOP_Ddr4_Mc1_Adr[9]}]
set_property PACKAGE_PIN K17 [get_ports {poTOP_Ddr4_Mc1_Adr[10]}]
set_property PACKAGE_PIN H19 [get_ports {poTOP_Ddr4_Mc1_Adr[11]}]
set_property PACKAGE_PIN J18 [get_ports {poTOP_Ddr4_Mc1_Adr[12]}]
set_property PACKAGE_PIN K16 [get_ports {poTOP_Ddr4_Mc1_Adr[13]}]
set_property PACKAGE_PIN J16 [get_ports {poTOP_Ddr4_Mc1_Adr[14]}]
set_property PACKAGE_PIN H16 [get_ports {poTOP_Ddr4_Mc1_Adr[15]}]
set_property PACKAGE_PIN C16 [get_ports {poTOP_Ddr4_Mc1_Adr[16]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Adr[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Adr[*]}]

set_property PACKAGE_PIN F14 [get_ports {poTOP_Ddr4_Mc1_Ba[0]}]
set_property PACKAGE_PIN F17 [get_ports {poTOP_Ddr4_Mc1_Ba[1]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Ba[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Ba[*]}]

set_property PACKAGE_PIN D14 [get_ports {poTOP_Ddr4_Mc1_Bg[0]}]
set_property PACKAGE_PIN E17 [get_ports {poTOP_Ddr4_Mc1_Bg[1]}]
set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Bg[*]}]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Bg[*]}]

set_property PACKAGE_PIN J14 [get_ports poTOP_Ddr4_Mc1_Ck_n]
set_property PACKAGE_PIN J15 [get_ports poTOP_Ddr4_Mc1_Ck_p]
set_property IOSTANDARD DIFF_SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Ck_n]
set_property IOSTANDARD DIFF_SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Ck_p]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Ck_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Ck_p]

set_property PACKAGE_PIN A14 [get_ports poTOP_Ddr4_Mc1_Cke]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Cke]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Cke]
# [IS-NOT-USED] set_property PACKAGE_PIN C14 [get_ports {poTOP_Ddr4_Mc1_Cke[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Cke[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Cke[*]}]

set_property PACKAGE_PIN G15 [get_ports poTOP_Ddr4_Mc1_Cs_n]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Cs_n]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Cs_n]
# [IS-NOT-USED] set_property PACKAGE_PIN K15 [get_ports {poTOP_Ddr4_Mc1_Cs_n[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]

set_property PACKAGE_PIN D15 [get_ports poTOP_Ddr4_Mc1_Odt]
set_property IOSTANDARD SSTL12_DCI [get_ports poTOP_Ddr4_Mc1_Odt]
set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports poTOP_Ddr4_Mc1_Odt]
# [IS-NOT-USED] set_property PACKAGE_PIN H14 [get_ports {poTOP_Ddr4_Mc1_Odt[1]}]
#OBSOLETE-20180413 set_property IOSTANDARD SSTL12_DCI [get_ports {poTOP_Ddr4_Mc1_Odt[*]}]
#OBSOLETE-20180413 set_property OUTPUT_IMPEDANCE RDRV_40_40 [get_ports {poTOP_Ddr4_Mc1_Odt[*]}]








####################################################################################
# Constraints from file : 'bd_b7e6_xpcs_0_clocks.xdc'
####################################################################################

## (c) Copyright 2009 - 2014 Xilinx, Inc. All rights reserved.
##
## This file contains confidential and proprietary information
## of Xilinx, Inc. and is protected under U.S. and
## international copyright and other intellectual property
## laws.
##
## DISCLAIMER
## This disclaimer is not a license and does not grant any
## rights to the materials distributed herewith. Except as
## otherwise provided in a valid license issued to you by
## Xilinx, and to the maximum extent permitted by applicable
## law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
## WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
## AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
## BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
## INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
## (2) Xilinx shall not be liable (whether in contract or tort,
## including negligence, or under any other theory of
## liability) for any loss or damage of any kind or nature
## related to, arising under or in connection with these
## materials, including for any direct, or any indirect,
## special, incidental, or consequential loss or damage
## (including loss of data, profits, goodwill, or any type of
## loss or damage suffered as a result of any action brought
## by a third party) even if such damage or loss was
## reasonably foreseeable or Xilinx had been advised of the
## possibility of the same.
##
## CRITICAL APPLICATIONS
## Xilinx products are not designed or intended to be fail-
## safe, or for use in any application requiring fail-safe
## performance, such as life-support or safety devices or
## systems, Class III medical devices, nuclear facilities,
## applications related to the deployment of airbags, or any
## other applications that could lead to death, personal
## injury, or severe property or environmental damage
## (individually and collectively, "Critical
## Applications"). Customer assumes the sole risk and
## liability of any use of Xilinx products in Critical
## Applications, subject only to applicable laws and
## regulations governing limitations on product liability.
##
## THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
## PART OF THIS FILE AT ALL TIMES.

#set_false_path -from $txusrclk2name -through [get_ports configuration_vector[110]]
#set_false_path -through [get_ports configuration_vector[110]] -to $txusrclk2name


#The following path refers to registers in front of the DP RAM in the rx elastic buffer async fifo
#set_false_path -from $RXOUTCLK_OUT -to [get_cells -hierarchical -filter {NAME =~ *elastic_buffer*dp_ram_i*rd_data* && (PRIMITIVE_SUBGROUP =~ flop || PRIMITIVE_SUBGROUP =~ SDR)}]





####################################################################################
# Constraints from file : 'AxiDataMover_M512_S512_B16_clocks.xdc'
####################################################################################

# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.



####################################################################################
# Constraints from file : 'AxiDataMover_M512_S64_B16_clocks.xdc'
####################################################################################

# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.


# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.



####################################################################################
# Constraints from file : 'AxiInterconnect_1M2S_A32_D512_impl_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Implementation-only Timing Constraints for AXI Interconnect Component "AxiInterconnect_1M2S_A32_D512"
###############################################################################################################

# This component is configured to perform asynchronous clock-domain-crossing.
# In order for these core-level constraints to work properly,
# the following rules apply to your system-level timing constraints:
#   1. Each of the nets connected to the INTERCONNECT_ACLK, Snn_AXI_ACLK and Mnn_AXI_ACLK ports of
#      this component must have exactly one clock defined on it, using either
#      a) a create_clock command on a top-level clock pin specified in your system XDC file, or
#      b) a create_generated_clock command, typically generated automatically by a core
#          producing a derived clock signal.
#   2. Any Snn_AXI_ACLK or Mnn_AXI_ACLK ports of this component that are associated with an asynchronous
#      clock conversion should not be connected to the same clock source as INTERCONNECT_ACLK.
#
current_instance SHELL_INST/MEM/MC0/ICT/inst
set_disable_timing -from CLK -to O [filter [get_cells -hierarchical -filter {NAME =~ *inst_fifo_gen/*gntv_or_sync_fifo.mem/gdm.dm*/RAM_reg*/RAM*}] {REF_NAME =~ RAM*}]

###############################################################################################################
# Core-Level Implementation-only Timing Constraints for AXI Interconnect Component "AxiInterconnect_1M2S_A32_D512"
###############################################################################################################

# This component is configured to perform asynchronous clock-domain-crossing.
# In order for these core-level constraints to work properly,
# the following rules apply to your system-level timing constraints:
#   1. Each of the nets connected to the INTERCONNECT_ACLK, Snn_AXI_ACLK and Mnn_AXI_ACLK ports of
#      this component must have exactly one clock defined on it, using either
#      a) a create_clock command on a top-level clock pin specified in your system XDC file, or
#      b) a create_generated_clock command, typically generated automatically by a core
#          producing a derived clock signal.
#   2. Any Snn_AXI_ACLK or Mnn_AXI_ACLK ports of this component that are associated with an asynchronous
#      clock conversion should not be connected to the same clock source as INTERCONNECT_ACLK.
#
current_instance -quiet
current_instance SHELL_INST/MEM/MC1/ICT/inst
set_disable_timing -from CLK -to O [filter [get_cells -hierarchical -filter {NAME =~ *inst_fifo_gen/*gntv_or_sync_fifo.mem/gdm.dm*/RAM_reg*/RAM*}] {REF_NAME =~ RAM*}]


####################################################################################
# Constraints from file : 'AxiInterconnect_1M2S_A32_D512_clocks.xdc'
####################################################################################

###############################################################################################################
# Core-Level Timing Constraints for AXI Interconnect Component "AxiInterconnect_1M2S_A32_D512"
###############################################################################################################
#
# Global timing constraints:
#
current_instance -quiet
current_instance SHELL_INST/MEM/MC0/ICT/inst
set_false_path -through [get_ports -scoped_to_current_instance INTERCONNECT_ARESETN]

# This component is configured to perform asynchronous clock-domain-crossing.
# In order for these core-level constraints to work properly,
# the following rules apply to your system-level timing constraints:
#   1. Each of the nets connected to the INTERCONNECT_ACLK, Snn_AXI_ACLK and Mnn_AXI_ACLK ports of
#      this component must have exactly one clock defined on it, using either
#      a) a create_clock command on a top-level clock pin specified in your system XDC file, or
#      b) a create_generated_clock command, typically generated automatically by a core
#          producing a derived clock signal.
#   2. Any Snn_AXI_ACLK or Mnn_AXI_ACLK ports of this component that are associated with an asynchronous
#      clock conversion should not be connected to the same clock source as INTERCONNECT_ACLK.
#
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *_async_conv_reset_reg}] 6.400
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *asyncfifo*rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~ *asyncfifo*wr_stg_inst/Q_reg*}] 6.400
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *asyncfifo*wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~ *asyncfifo*rd_stg_inst/Q_reg*}] 6.400

###############################################################################################################
# Core-Level Timing Constraints for AXI Interconnect Component "AxiInterconnect_1M2S_A32_D512"
###############################################################################################################
#
# Global timing constraints:
#
current_instance -quiet
current_instance SHELL_INST/MEM/MC1/ICT/inst
set_false_path -through [get_ports -scoped_to_current_instance INTERCONNECT_ARESETN]

# This component is configured to perform asynchronous clock-domain-crossing.
# In order for these core-level constraints to work properly,
# the following rules apply to your system-level timing constraints:
#   1. Each of the nets connected to the INTERCONNECT_ACLK, Snn_AXI_ACLK and Mnn_AXI_ACLK ports of
#      this component must have exactly one clock defined on it, using either
#      a) a create_clock command on a top-level clock pin specified in your system XDC file, or
#      b) a create_generated_clock command, typically generated automatically by a core
#          producing a derived clock signal.
#   2. Any Snn_AXI_ACLK or Mnn_AXI_ACLK ports of this component that are associated with an asynchronous
#      clock conversion should not be connected to the same clock source as INTERCONNECT_ACLK.
#
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *_async_conv_reset_reg}] 6.400
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *asyncfifo*rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~ *asyncfifo*wr_stg_inst/Q_reg*}] 6.400
set_max_delay -datapath_only -from [get_cells -hierarchical -filter {NAME =~ *asyncfifo*wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~ *asyncfifo*rd_stg_inst/Q_reg*}] 6.400


####################################################################################
# Constraints from file : 'xpm_fifo_rst.tcl'
####################################################################################

# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}



# Scoped constraints for xpm_fifo
#if {([llength [ get_cells -hier *src_gray_ff_reg* -quiet]] > 0)} {
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *wr_rst_i_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#wr_rst_rd_reg[*]/D}]
#set_false_path -from [get_pins -hierarchical -filter {NAME =~ *rd_rst_d3_reg/C}] -to [get_pins -hierarchical -filter {NAME =~ *d_out_reg/D}]
#}




# User Generated physical constraints 

current_instance -quiet
create_pblock pblock_ROLE_INST
add_cells_to_pblock [get_pblocks pblock_ROLE_INST] [get_cells -quiet [list ROLE_INST]]
resize_pblock [get_pblocks pblock_ROLE_INST] -add {SLICE_X6Y10:SLICE_X59Y294}
resize_pblock [get_pblocks pblock_ROLE_INST] -add {DSP48E2_X1Y4:DSP48E2_X10Y117}
resize_pblock [get_pblocks pblock_ROLE_INST] -add {RAMB18_X1Y4:RAMB18_X7Y117}
resize_pblock [get_pblocks pblock_ROLE_INST] -add {RAMB36_X1Y2:RAMB36_X7Y58}

# Vivado Generated miscellaneous constraints 

#revert back to original instance
current_instance -quiet
