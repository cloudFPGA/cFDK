# ******************************************************************************
# *
# *                        Zurich cloudFPGA
# *            All rights reserved -- Property of IBM
# *
# *-----------------------------------------------------------------------------
# *
# * Title   : Default timing constraint file for the FMKU2595 equipped with a
# *           XCKU060.
# * File    : top_FMKU60_Flash_timg.
# *
# * Created : Sep. 2017
# * Authors : Francois Abel <fab@zurich.ibm.com>
# *
# * Devices : xcku060-ffva1156-2-i
# * Tools   : Vivado v2016.4, v2017.4 (64-bit)
# * Depends : None
# *
# * Description : This file contains all the default timing constraints for
# *     operating a XCKU060 on a FMKU2595 module. The constraints are grouped by
# *      external device and connector entity names:
# *       - the synchronous dynamic random access memory (SDRM)
# *       - the programmable system on chip controller (PSOC)
# *       - the configuration Flash memory (FLASH)
# *       - the clock tree generator (CLKT)
# *       - the edge backplane connector (ECON)
# *       - the top extension connector (XCON)
# *
# *     The SDRM has the following interfaces:
# *       - a memory channel 0 (SDRM_Mch0)
# *       - a memory channel 1 (SDRM_Mch1)
# *     The PSOC has the following interfaces:
# *       - an External memory interface (PSOC_Emif)
# *       - an Fpga configuration interface (PSOC_Fcfg)
# *     The FLASH has the following interfaces:
# *       - a byte peripheral interface (FLASH_Bpi)
# *     The CLKT has the following interfaces:
# *       -
# *     The ECON has the following interfaces:
# *     The XCON has the following interfaces:
# *
# *
# *-----------------------------------------------------------------------------
# * Constraints Methodology and Recommendations (according to Xilinx UG903)
# *   - Xilinx recommends to separate timing constraints and physical constraints
# *     by saving them into two distinct files.
# *   - Organize your constraints in the following sequence.
# *     [1] Timing Assertions Section
# *       - Primary clocks
# *       -  Virtual clocks
# *       -  Generated clocks
# *       -  Clock Groups
# *       -  Bus Skew constraints
# *       -  Input and output delay constraints
# *     [2] Timing Exceptions Section
# *       -  False Paths
# *       -  Max Delay / Min Delay
# *       -  Multicycle Paths
# *       -  Case Analysis
# *       -  Disable Timing
# *     [3] Physical Constraints Section
# *       -  located anywhere in the file, preferably before or after the timing constraints
# *       -  or stored in a separate constraint file
# *
# ******************************************************************************


################################################################################
#                                                                              #
#  WARNING: This file makes use of constants which are defined in a TCL file.  #
#           Please see the local file: 'xdc_settings.tcl'.                     #
#                                                                              #
################################################################################


#===============================================================================
# Create the Root Clocks as generated by the Clock Tree (CLKT)
#===============================================================================

# CLKT / Reference clock for GTH transceivers of the 10GE Interface
create_clock -name piCLKT_10GeClk -period 6.400 [get_ports piCLKT_10GeClk_p]

# CLKT / Reference clock for the User clock #0
create_clock -name piCLKT_Usr0Clk -period 4.000 -waveform {0.000 2.000} [get_ports piCLKT_Usr0Clk_p]

# CLKT / Reference clock for the User clock #1
create_clock -name piCLKT_Usr1Clk -period 4.000 -waveform {0.000 2.000} [get_ports piCLKT_Usr1Clk_p]

# CLKT / Reference clock for the DRAM block 0
create_clock -name piCLKT_Mem0Clk -period 3.333 -waveform {0.000 1.667} [get_ports piCLKT_Mem0Clk_p]

# CLKT / Reference clock for the DRAM block 1
create_clock -name piCLKT_Mem1Clk -period 3.333 -waveform {0.000 1.667} [get_ports piCLKT_Mem1Clk_p]


#===============================================================================
# Create the Root Clock as generated by the EMIF bus I/F of the PSOC
#===============================================================================
create_clock -name piPSOC_Emif_Clk -period ${cPsocEmifClkPeriod} -waveform ${cPsocEmifClkWaveform} [ get_ports piPSOC_Emif_Clk ]


#===============================================================================
# Create a virtual clock to avoid "Critical Timing = NO_CLOCK".
#   These are constraints added to render the device fully constrained. 
#   In short, the characteristics of the clock driving every clockable cell must
#   be known by the tool. In general this is done by creating a clock on a port,
#   pin or net, upstream of the clock pin of the cell. This clock then propagates
#   forward to all clock pins that are combinatorially reachable from that port, 
#   pin or net.
#===============================================================================
create_clock -name topResetUsedAsClk -period 1000 [ get_pins sTOP_156_25Rst_reg/Q ]


#=====================================================================
# Definition of the Clock Interactions and their Constraints
#=====================================================================

# Asynchronous Clocks
set_clock_groups -asynchronous -group [ get_clocks piPSOC_Emif_Clk ] -group [ get_clocks piCLKT_Usr0Clk ]
set_clock_groups -asynchronous -group [ get_clocks piPSOC_Emif_Clk ] -group [ get_clocks -of_objects [get_pins SHELL/SuperCfg.ETH0/ETH0/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O] ]

set_clock_groups -asynchronous -group [ get_clocks topResetUsedAsClk ] -group [ get_clocks piPSOC_Emif_Clk ]

set_clock_groups -asynchronous -group [ get_clocks -of_objects [ get_pins SHELL/SuperCfg.ETH0/ETH0/CORE/IP/U0/xpcs/U0/ten_gig_eth_pcs_pma_shared_clock_reset_block/txusrclk2_bufg_gt_i/O]] -group [get_clocks topResetUsedAsClk]
























#=====================================================================
# Set Some Usefull TCL Variables
#=====================================================================
set myShellClk [ get_clocks sSHL_156_25Clk_1 ]
set cShellClockFreq   156.25                                # In MHz
set cShellClockPeriod [ expr 1000.0 / ${cShellClockFreq} ]  # In ns

#=====================================================================
# Constraints related to the Backplane Edge Connector (ECON)
#=====================================================================
# ECON / 10 Gigabit Ethernet Rx/Tx links #1


#=====================================================================
# Constraints related to the Programmable SoC (PSOC)
#=====================================================================

# PSOC / FPGA Configuration Interface / Reset
#---------------------------------------------
set_false_path -from [ get_pins sTOP_156_25Rst_reg/C ]


#---------------------------------------------------------------------
# PSOC / External Memory Interface (see PSoC Creator Component v1.30)
#---------------------------------------------------------------------
#
#             +---+   +---+   +---+   +---+   +---+   +---+   +---+
# Bus Clock   |   |   |   |   |   |   |   |   |   |   |   |   |   |
#          ---+   +---+   +---+   +---+   +---+   +---+   +---+   +---
#
#                         +---+                           +---+
# EMIF Clk                |   |                           |   |
#          ---------------+   +---------------------------+   +-------
#
#              +-----------------------------+ +----------------------
# EMIF Addr --X                               X
#              +-----------------------------+ +----------------------
#
#          ----------+        +-----------------------+        +------
# EMIF CTtl          |        |                       |        |
#                    +--------+                       +--------+
#
#----------------------------------------------------------------------

# PSoC / Emif - Address[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -${cPsocEmifAddrSetup} [ get_ports {piPSOC_Emif_Addr[*]} ]
set_input_delay -clock piPSOC_Emif_Clk -min +${cPsocEmifAddrHold}  [ get_ports {piPSOC_Emif_Addr[*]} ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports {piPSOC_Emif_Addr[*]}]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 52.083 [get_ports {piPSOC_Emif_Addr[*]}]

# PSOC / Emif - Chip select - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -${cPsocEmifCsSetup} [ get_ports piPSOC_Emif_Cs_n ]
set_input_delay -clock piPSOC_Emif_Clk -min +${cPsocEmifCsHold}  [ get_ports piPSOC_Emif_Cs_n ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_Cs_n]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_Cs_n]

# PSoC / Emif - Address Strobe - Access setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -${cPsocEmifAdsSetup} [ get_ports piPSOC_Emif_AdS_n ]
set_input_delay -clock piPSOC_Emif_Clk -min +${cPsocEmifAdsHold}  [ get_ports piPSOC_Emif_AdS_n ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_AdS_n]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_AdS_n]

# PSOC / Emif - Write enable - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -${cPsocEmifWeSetup} [ get_ports piPSOC_Emif_We_n ]
set_input_delay -clock piPSOC_Emif_Clk -min +${cPsocEmifWeHold}  [ get_ports piPSOC_Emif_We_n ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_We_n]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 20.833 [get_ports piPSOC_Emif_We_n]

# PSoC / Emif - Output enable - Read setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -${cPsocEmifOeSetup} [ get_ports piPSOC_Emif_Oe_n ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -20.833 [get_ports piPSOC_Emif_Oe_n]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 31.250 [get_ports piPSOC_Emif_Oe_n]

# PSoC / Emif - Data[7:0] - Write setup and hold times
set_input_delay -clock piPSOC_Emif_Clk -max -$cPsocEmifDataWrSetup [ get_ports {pioPSOC_Emif_Data[*]} ]
set_input_delay -clock piPSOC_Emif_Clk -min +$cPsocEmifDataWrHold  [ get_ports {pioPSOC_Emif_Data[*]} ]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -max -31.667 [get_ports {pioPSOC_Emif_Data[*]}]
#OBSOLETE-20180419 set_input_delay -clock piPSOC_Emif_Clk -min 52.083 [get_ports {pioPSOC_Emif_Data[*]}]

# PSoC / Emif - Data[7:0] - Read setup and hold times
set_output_delay -clock piPSOC_Emif_Clk -max +${cPsocEmifDataRdSetup} [ get_ports {pioPSOC_Emif_Data[*]} ]
set_output_delay -clock piPSOC_Emif_Clk -min +${cPsocEmifDataRdHold}  [ get_ports {pioPSOC_Emif_Data[*]} ]
#OBSOLETE-20180419 set_output_delay -clock piPSOC_Emif_Clk -max 57.500 [get_ports {pioPSOC_Emif_Data[*]}]
#OBSOLETE-20180419 set_output_delay -clock piPSOC_Emif_Clk -min 67.500 [get_ports {pioPSOC_Emif_Data[*]}]


#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #0
#=====================================================================

# DDR4 / Memory Channel #0

#OBSOLETE-20180418 set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]
#OBSOLETE-20180418 set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Cs_n[*]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc0_Cs_n}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc0_Cs_n}]

#=====================================================================
# Constraints related to the Synchronous Dynamic RAM (DDR4)
#   DDR4 / Memory Channel #1
#=====================================================================

# DDR4 / Memory Channel #1

#OBSOLETE-20180418 set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]
#OBSOLETE-20180418 set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Cs_n[*]}]
set_property SLEW FAST [get_ports {poTOP_Ddr4_Mc1_Cs_n}]
set_property DATA_RATE SDR [get_ports {poTOP_Ddr4_Mc1_Cs_n}]



#OBSOLETE-20180419 set_output_delay -clock [get_clocks piCLKT_Usr0Clk] -min -add_delay -5.000 [get_ports {pioPSOC_Emif_Data[*]}]
#OBSOLETE-20180419 set_output_delay -clock [get_clocks piCLKT_Usr0Clk] -max -add_delay  5.000 [get_ports {pioPSOC_Emif_Data[*]}]

#=====================================================================
# Constraints related to the Heart Beat LED
#=====================================================================
#OBSOLETE-20180419 set_false_path -to [get_ports poTOP_Led_HeartBeat_n]
set_output_delay -clock ${myShellClk} -min [ expr ${cShellClockPeriod} / 2 ] [ get_ports {poTOP_Led_HeartBeat_n} ]
set_output_delay -clock ${myShellClk} -max [ expr ${cShellClockPeriod} / 2 ] [ get_ports {poTOP_Led_HeartBeat_n} ]


#=====================================================================
# Constraints added by the Timing Constraint Wizard
#=====================================================================
set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]


